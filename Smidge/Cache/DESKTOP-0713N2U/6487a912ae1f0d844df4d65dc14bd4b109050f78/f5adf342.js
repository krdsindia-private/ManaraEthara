angular.module("umbraco").controller("UmbracoForms.EditTypes.CheckboxListController",function($scope,formService){var vm=this;vm.value=formService.getSelectedPrevalues($scope.detail.fieldPreValues,$scope.detail.value);vm.isChecked=function(preValue){return vm.value.indexOf(preValue.value)>-1};vm.change=function(selectedPreValue){var newValue,i,fieldPreValue;if(vm.value.includes(selectedPreValue.value))vm.value=vm.value.filter(function(e){return e!==selectedPreValue.value});else{for(newValue=[],i=0;i<$scope.detail.fieldPreValues.length;i++)fieldPreValue=$scope.detail.fieldPreValues[i],selectedPreValue.value===fieldPreValue.value?newValue.push(selectedPreValue.value):vm.value.includes(fieldPreValue.value)&&newValue.push(fieldPreValue.value);vm.value=newValue}$scope.detail.value=vm.value.join(", ");$scope.detail.multipleValuesSaved=!0}});angular.module("umbraco").controller("UmbracoForms.EditTypes.CheckboxController",function($scope){var vm=this;vm.checked=$scope.detail.value.toLowerCase()==="true";vm.change=function(){vm.checked=!vm.checked;$scope.detail.value=vm.checked?"True":"False"}});angular.module("umbraco").controller("UmbracoForms.EditTypes.DateController",function($scope){var vm=this;$scope.detail.value&&(vm.value=new Date($scope.detail.value));vm.change=function(){$scope.detail.value=vm.value.toISOString().substring(0,10)}});angular.module("umbraco").controller("UmbracoForms.EditTypes.DropDownMultipleController",function($scope){var vm=this;vm.value=$scope.detail.value.split(", ");vm.change=function(){$scope.detail.value=vm.value.join(", ");$scope.detail.multipleValuesSaved=!0}});angular.module("umbraco").controller("UmbracoForms.EditTypes.RadioButtonListController",function($scope){var vm=this;vm.value=$scope.detail.value;vm.change=function(){$scope.detail.value=vm.value}});angular.module("umbraco").controller("UmbracoForms.RenderTypes.DateController",function($scope){$scope.formatDate=function(date){return date?new Date(date):null}});angular.module("umbraco").controller("UmbracoForms.RenderTypes.FileController",function($scope){var imageExts=["jpg","jpeg","png","gif","bmp"];$scope.files=[];$scope.field&&($scope.files=$scope.field.replace("~","").split(","));$scope.isImage=function(filepath){return imageExts.indexOf($scope.getExtension(filepath))>=0};$scope.getExtension=function(filepath){return filepath.substring(filepath.lastIndexOf(".")+1).toLowerCase()};$scope.getFileName=function(filepath){return filepath.substring(filepath.lastIndexOf("/")+1)};$scope.getPreview=function(filepath){return filepath.replace("~","")+"?width=400"}});angular.module("umbraco").controller("UmbracoForms.SettingTypes.DocumentMapperController",function($scope,$routeParams,pickerResource){if($scope.setting.value){var value=JSON.parse($scope.setting.value);$scope.doctype=value.doctype;$scope.nameField=value.nameField;$scope.nameStaticValue=value.nameStaticValue;pickerResource.updateMappedProperties($scope.doctype,value.properties).then(function(response){$scope.properties=response.data})}pickerResource.getAllDocumentTypes().then(function(response){$scope.doctypes=response.data});pickerResource.getAllFields($routeParams.id).then(function(response){$scope.fields=response.data});$scope.setDocType=function(){pickerResource.getAllProperties($scope.doctype).then(function(response){$scope.properties=response.data})};$scope.setValue=function(){var val={};val.doctype=$scope.doctype;val.nameField=$scope.nameField;val.nameStaticValue=$scope.nameStaticValue;val.properties=$scope.properties;$scope.setting.value=JSON.stringify(val)}});angular.module("umbraco").controller("UmbracoForms.SettingTypes.DropDownListController",function($scope){$scope.setting.value===undefined&&($scope.setting.value=$scope.setting.defaultValue)});angular.module("umbraco").controller("UmbracoForms.SettingTypes.EmailTemplatePicker",function($scope,pickerResource,editorService){$scope.openTreePicker=function(){editorService.treePicker({treeAlias:"EmailTemplates",section:"forms",entityType:"email-template",multiPicker:!1,onlyInitialized:!1,select:function(node){pickerResource.getVirtualPathForEmailTemplate(node.id).then(function(response){$scope.setting.value=response.data.path});editorService.close()},close:function(){editorService.close()}})}});angular.module("umbraco").controller("UmbracoForms.SettingTypes.FieldMapperController",function($scope,$routeParams,pickerResource){$scope.mappings=$scope.setting.value?JSON.parse($scope.setting.value):[];var formId=$routeParams.id;formId===-1&&$scope.model&&$scope.model.fields||pickerResource.getAllFields($routeParams.id).then(function(response){$scope.fields=response.data});$scope.addMapping=function(){$scope.mappings.push({alias:"",value:"",staticValue:""})};$scope.deleteMapping=function(index){$scope.mappings.splice(index,1);$scope.setting.value=JSON.stringify($scope.mappings)};$scope.stringifyValue=function(){$scope.setting.value=JSON.stringify($scope.mappings)}});angular.module("umbraco").controller("UmbracoForms.SettingTypes.FileUpload",function($scope,Upload,notificationsService){var vm=this;vm.isUploading=!1;vm.filePercentage=0;vm.savedPath=$scope.setting.value;vm.uploadFile=function(file){Upload.upload({url:"backoffice/UmbracoForms/PreValueFile/PostAddFile",fields:{previousPath:vm.savedPath},file:file}).progress(function(evt){vm.isUploading=!0;var progressPercentage=parseInt(100*evt.loaded/evt.total,10);vm.filePercentage=progressPercentage}).success(function(data){$scope.setting.value=data.FilePath;vm.savedPath=data.FilePath;vm.isUploading=!1;vm.filePercentage=0}).error(function(evt){if(angular.isArray(evt.notifications))for(var i=0;i<evt.notifications.length;i++)notificationsService.showNotification(evt.notifications[i]);vm.isUploading=!1;vm.filePercentage=0})}});angular.module("umbraco").controller("UmbracoForms.SettingTypes.File",function($scope,editorService){$scope.openMediaPicker=function(){editorService.mediaPicker({submit:function(model){$scope.setting.value=model.selection[0].image;editorService.close()},close:function(){editorService.close()}})};$scope.clear=function(){$scope.setting.value=undefined}});angular.module("umbraco").controller("UmbracoForms.SettingTypes.NumericFieldController",function($scope){var vm=this,defaultValue;vm.min=parseFloat($scope.setting.prevalues[0]);vm.max=parseFloat($scope.setting.prevalues[1]);defaultValue=$scope.setting.defaultValue&&$scope.setting.defaultValue.length>0?parseFloat($scope.setting.defaultValue):parseFloat($scope.setting.prevalues[2]);$scope.setting.value===undefined&&($scope.setting.value=defaultValue);vm.value=parseFloat($scope.setting.value);vm.change=function(){$scope.setting.value=vm.value?vm.value.toString():""}});angular.module("umbraco").controller("UmbracoForms.SettingTypes.PasswordController",function($scope){$scope.setting.value===undefined&&($scope.setting.value=$scope.setting.defaultValue)});angular.module("umbraco").controller("UmbracoForms.SettingTypes.PasswordNoAutocompleteController",function($scope){$scope.setting.value===undefined&&($scope.setting.value=$scope.setting.defaultValue)});angular.module("umbraco").controller("UmbracoForms.SettingTypes.Pickers.CheckboxController",function($scope){function setValue(){$scope.setting.value=vm.checked?"True":"False"}var vm=this,defaultToTrue;vm.checked=!1;defaultToTrue=$scope.setting.defaultValue&&$scope.setting.defaultValue.length>0?$scope.setting.defaultValue.toLowerCase()==="true"||$scope.setting.defaultValue.toLowerCase()==="on":$scope.setting.prevalues.length>0&&$scope.setting.prevalues[0]==="true"?!0:!1;vm.checked=defaultToTrue?$scope.setting.value!=="False":$scope.setting.value==="True";$scope.setting.value||setValue();vm.toggle=function(){vm.checked=!vm.checked;setValue()}});angular.module("umbraco").controller("UmbracoForms.SettingTypes.Pickers.ConnectionStringController",function($scope,pickerResource){pickerResource.getAllConnectionStrings().then(function(response){$scope.strings=response.data})});angular.module("umbraco").controller("UmbracoForms.SettingTypes.Pickers.ContentController",function($scope,editorService,entityResource,iconHelper){$scope.setting||($scope.setting={});var val=parseInt($scope.setting.value);!isNaN(val)&&angular.isNumber(val)&&($scope.showQuery=!1,entityResource.getById($scope.setting.value,"Document").then(function(item){item.icon=iconHelper.convertFromLegacyIcon(item.icon);$scope.node=item}));$scope.openContentPicker=function(){editorService.contentPicker({submit:function(model){var item=model.selection[0];$scope.clear();item.icon=iconHelper.convertFromLegacyIcon(item.icon);$scope.node=item;$scope.id=item.id;$scope.setting.value=item.id;editorService.close()},close:function(){editorService.close()}})};$scope.clear=function(){$scope.id=undefined;$scope.node=undefined;$scope.setting.value=undefined}});angular.module("umbraco").controller("UmbracoForms.SettingTypes.Pickers.ContentWithXpathController",function($scope,editorService,entityResource,iconHelper){function valueIsEntityId(value){return/^([1-9]\d*)$/.test(value)}$scope.queryIsVisible=!1;$scope.helpIsVisible=!1;$scope.query="";$scope.setting||($scope.setting={});valueIsEntityId($scope.setting.value)?entityResource.getById($scope.setting.value,"Document").then(function(item){item.icon=iconHelper.convertFromLegacyIcon(item.icon);$scope.node=item}):$scope.setting.value&&($scope.queryIsVisible=!0,$scope.query=$scope.setting.value);$scope.openContentPicker=function(){editorService.contentPicker({submit:function(model){var item=model.selection[0];$scope.clear();item.icon=iconHelper.convertFromLegacyIcon(item.icon);$scope.node=item;$scope.id=item.id;$scope.setting.value=item.id;editorService.close()},close:function(){editorService.close()}})};$scope.showQuery=function(){$scope.queryIsVisible=!0};$scope.toggleHelp=function(){$scope.helpIsVisible=!$scope.helpIsVisible};$scope.setXpath=function(){$scope.setting.value=$scope.query};$scope.clear=function(){$scope.id=undefined;$scope.node=undefined;$scope.setting.value=undefined;$scope.query=undefined;$scope.queryIsVisible=!1}});angular.module("umbraco").controller("UmbracoForms.SettingTypes.Pickers.DataTypeController",function($scope,pickerResource){pickerResource.getAllDataTypes().then(function(response){$scope.datatypes=response.data})});angular.module("umbraco").controller("UmbracoForms.SettingTypes.Pickers.DocumentTypeController",function($scope,pickerResource){pickerResource.getAllDocumentTypes().then(function(response){$scope.doctypes=response.data})});angular.module("umbraco").controller("UmbracoForms.SettingTypes.RangeController",function($scope){function getDecimalPlaces(value){return Math.floor(value)===value?0:value.toString().split(".")[1].length||0}var vm=this,min=parseFloat($scope.setting.prevalues[0]),max=parseFloat($scope.setting.prevalues[1]),step=parseFloat($scope.setting.prevalues[2]),stepDecimalPlaces=getDecimalPlaces(step),defaultValue;defaultValue=$scope.setting.defaultValue&&$scope.setting.defaultValue.length>0?parseFloat($scope.setting.defaultValue):parseFloat($scope.setting.prevalues[3]);$scope.setting.value===undefined&&($scope.setting.value=defaultValue);vm.value=parseFloat($scope.setting.value);vm.sliderOptions={start:[vm.value],step:step,tooltips:[!0],format:{to:function(value){return value.toFixed(stepDecimalPlaces)},from:function(value){return Number(value)}},range:{min:min,max:max},pips:{mode:"steps",density:100,format:{to:function(value){return value.toFixed(stepDecimalPlaces)},from:function(value){return Number(value)}}}};vm.change=function(values){$scope.setting.value=values[0].toString()}});angular.module("umbraco").controller("UmbracoForms.SettingTypes.RichTextController",function($scope,fieldResource){var vm=this;vm.loading=!0;vm.htmlAvailable=!1;$scope.setting.value===undefined&&($scope.setting.value=$scope.setting.defaultValue);fieldResource.getDataTypeForRichTextField().then(function(response){response.data&&(vm.htmlfield={alias:"htmlfield",label:"Html",view:"rte",editor:"Umbraco.TinyMCE",config:{editor:response.data.preValues[0].value},value:$scope.setting.value},vm.htmlAvailable=!0);vm.loading=!1});$scope.$watch("vm.htmlfield",function(){typeof vm.htmlfield!="undefined"&&($scope.setting.value=vm.htmlfield.value)},!0)});angular.module("umbraco").controller("UmbracoForms.SettingTypes.StandardFieldMapperController",function($scope){function hasMapping(mappings,fieldName){return mappings.filter(function(e){return e.field===fieldName}).length>0}function ensureDefaultMapping(mappings,fieldName){hasMapping($scope.mappings,fieldName)||mappings.push({field:fieldName})}$scope.mappings=$scope.setting.value?JSON.parse($scope.setting.value):[];ensureDefaultMapping($scope.mappings,"FormId");ensureDefaultMapping($scope.mappings,"FormName");ensureDefaultMapping($scope.mappings,"PageUrl");ensureDefaultMapping($scope.mappings,"SubmissionDate");$scope.friendlyName=function(field){switch(field){case"FormId":return"Form ID";case"FormName":return"Form name";case"PageUrl":return"Page URL";case"SubmissionDate":return"Submission date/time";default:return field}};$scope.toggleInclude=function(mapping){mapping.include=!mapping.include;mapping.keyName=mapping.include?mapping.field:"";$scope.setting.value=JSON.stringify($scope.mappings)};$scope.stringifyValue=function(){$scope.setting.value=JSON.stringify($scope.mappings)}});angular.module("umbraco").controller("UmbracoForms.SettingTypes.TextAreaController",function($scope){$scope.setting.value===undefined&&($scope.setting.value=$scope.setting.defaultValue)});angular.module("umbraco").controller("UmbracoForms.SettingTypes.TextFieldController",function($scope){$scope.setting.value===undefined&&($scope.setting.value=$scope.setting.defaultValue)});angular.module("umbraco").controller("UmbracoForms.SettingTypes.TextFieldNoAutocompleteController",function($scope){$scope.setting.value===undefined&&($scope.setting.value=$scope.setting.defaultValue)});angular.module("umbraco").controller("UmbracoForms.SettingTypes.TextStringController",function($scope){$scope.setting.value===undefined&&($scope.setting.value=$scope.setting.defaultValue)});angular.module("umbraco").controller("UmbracoForms.Dashboards.FormsController",function($scope,$location,$cookies,formResource,licensingResource,updatesResource,notificationsService,userService,securityResource,recordResource,localizationService){function loadStatus(){licensingResource.getLicenseStatus().then(function(response){vm.status=response.data;vm.isLoading=!1});updatesResource.getUpdateStatus().then(function(response){vm.version=response.data});updatesResource.getVersion().then(function(response){vm.currentVersion=response.data});updatesResource.getSavePlainTextPasswordsConfiguration().then(function(response){vm.savePlainTextPasswords=response.data.toString()==="true"})}function getRecordCounts(){_.each(vm.forms,function(form,index){if(!(index>=vm.formsLimit)&&!form.gotEntries){var filter={form:form.id};recordResource.getRecordsCount(filter).then(function(response){form.entries=response.data.count;form.gotEntries=!0})}})}var vm=this,packageInstall;vm.isLoading=!0;vm.overlay={show:!1};vm.configuration={domain:window.location.hostname};vm.initialFormsLimit=4;vm.formsLimit=4;localizationService.localizeMany(["formsDashboard_installOverlayTitle","formsDashboard_installOverlayDescription"]).then(function(labels){vm.overlay.title=labels[0];vm.overlay.description=labels[1]});packageInstall=$cookies.get("umbPackageInstallId");packageInstall&&(vm.overlay.show=!0,$cookies.put("umbPackageInstallId",""));vm.userCanManageForms=!1;userService.getCurrentUser().then(function(response){vm.currentUser=response;vm.isAdminUser=response.userGroups.includes("admin");securityResource.getForCurrentUser(!1).then(function(response){var userSecurity=response.data.userSecurity;vm.userCanManageForms=userSecurity.manageForms;vm.userCanViewEntries=userSecurity.viewEntries})});vm.overlay.show||formResource.getOverView().then(function(response){response.data.length===0&&(vm.overlay.show=!0,localizationService.localizeMany(["formsDashboard_emptyOverlayTitle","formsDashboard_emptyOverlayDescription"]).then(function(labels){vm.overlay.title=labels[0];vm.overlay.description=labels[1]}))});loadStatus();formResource.getOverView().then(function(response){vm.forms=response.data;getRecordCounts()});vm.getLicenses=function(config){vm.loginError=!1;vm.hasLicenses=undefined;vm.isLoading=!0;licensingResource.getAvailableLicenses(config).then(function(response){var licenses=response.data,currentDomain=window.location.hostname;vm.hasLicenses=licenses.length>0;_.each(licenses,function(lic){lic.bindings&&lic.bindings.indexOf(currentDomain)>=0&&(lic.currentDomainMatch=!0)});vm.configuredLicenses=_.sortBy(_.filter(licenses,function(license){return license.configured}),"currentDomainMatch");vm.openLicenses=_.filter(licenses,function(license){return license.configured===!1});vm.isLoading=!1},function(){vm.loginError=!0;vm.hasLicenses=undefined;vm.isLoading=!1})};vm.configure=function(config){vm.isLoading=!0;licensingResource.configureLicense(config).then(function(){vm.configuredLicenses.length=0;vm.openLicenses.length=0;loadStatus();localizationService.localizeMany(["formsDashboard_licenseConfiguredNotificationTitle","formsDashboard_licenseConfiguredNotificationMessage"]).then(function(labels){notificationsService.success(labels[0],labels[1])})})};vm.create=function(){if(!vm.userCanManageForms){localizationService.localizeMany(["formsDashboard_insufficientPermissionsError","formsDashboard_insufficientPermissionsMessage"]).then(function(labels){notificationsService.success(labels[0],labels[1])});return}$location.url("forms/Form/edit/-1?template=&create=true")};vm.hasUnrestrictedLicense=function(status){return status&&status.licenseLimitations&&status.licenseLimitations.includes("*not* associated with any ips or domains")};vm.displayLicensedDomains=function(status){return status&&status.validDomains&&status.validDomains.length>0?("<ul><li>"+status.validDomains.split("|").join("<\/li><li>")+"<\/li><\/ul>").replace("<li><\/li>",""):""};vm.showMore=function(){vm.formsLimit=vm.formsLimit+8;getRecordCounts()};vm.getFormView=function(){return vm.userCanViewEntries?"entries":"edit"}});angular.module("umbraco").controller("UmbracoForms.Editors.DataSource.DeleteController",function($scope,dataSourceResource,navigationService,treeService){$scope.delete=function(id){dataSourceResource.deleteByGuid(id).then(function(){treeService.removeNode($scope.currentNode);navigationService.hideNavigation()})};$scope.cancelDelete=function(){navigationService.hideNavigation()}});angular.module("umbraco").controller("UmbracoForms.Editors.DataSource.EditController",function($scope,$routeParams,dataSourceResource,editorState,notificationsService,editorService,navigationService,formHelper,securityResource,localizationService,providerLocalizationHelper){function setTypeAndSettings(){$scope.dataSource.$type=_.where($scope.types,{id:$scope.dataSource.formDataSourceTypeId})[0];angular.forEach($scope.dataSource.settings,function(){for(var key in $scope.dataSource.settings)$scope.dataSource.settings.hasOwnProperty(key)&&_.where($scope.dataSource.$type.settings,{alias:key}).length>0&&(_.where($scope.dataSource.$type.settings,{alias:key})[0].value=$scope.dataSource.settings[key])})}securityResource.getForCurrentUser(!1).then(function(response){if($scope.security=response.data,!$scope.security.userSecurity.manageDataSources){localizationService.localizeMany(["formPermissions_accessDeniedTitle","formDataSources_accessDeniedMessage"]).then(function(labels){notificationsService.error(labels[0],labels[1])});navigationService.syncTree({tree:"datasource",path:["-1"],forceReload:!0,activate:!1}).then(function(response){navigationService.reloadNode(response.node)});return}});$routeParams.create?dataSourceResource.getScaffold().then(function(response){$scope.loaded=!0;$scope.dataSource=response.data;dataSourceResource.getAllDataSourceTypesWithSettings().then(function(resp){$scope.types=resp.data;localizationService.localizeMany(providerLocalizationHelper.getLocalizationKeys("formProviderDataSources",$scope.types)).then(function(labels){providerLocalizationHelper.applyLocalizationLabels($scope.types,labels)})});editorState.set($scope.form)}):dataSourceResource.getByGuid($routeParams.id).then(function(response){$scope.dataSource=response.data;dataSourceResource.getAllDataSourceTypesWithSettings().then(function(resp){$scope.types=resp.data;localizationService.localizeMany(providerLocalizationHelper.getLocalizationKeys("formProviderDataSources",$scope.types)).then(function(labels){providerLocalizationHelper.applyLocalizationLabels($scope.types,labels);setTypeAndSettings();$scope.loaded=!0})});editorState.set($scope.dataSource)});$scope.setType=function(){setTypeAndSettings()};$scope.save=function(){formHelper.submitForm({scope:$scope})&&($scope.dataSource.settings={},$scope.dataSource.$type&&angular.forEach($scope.dataSource.$type.settings,function(setting){var key=setting.alias,value=setting.value;$scope.dataSource.settings[key]=value}),localizationService.localizeMany(["formDataSources_saveSuccessTitle","formDataSources_saveErrorTitle","formMessages_saveErrorMessage"]).then(function(labels){dataSourceResource.validateSettings($scope.dataSource).then(function(response){$scope.errors=response.data;$scope.errors.length>0?($scope.dataSource.valid=!1,angular.forEach($scope.errors,function(error){notificationsService.error(labels[1],error.Message)})):dataSourceResource.save($scope.dataSource).then(function(response){$scope.dataSource=response.data;editorState.set($scope.dataSource);setTypeAndSettings();navigationService.syncTree({tree:"datasource",path:[String($scope.dataSource.id)],forceReload:!0});notificationsService.success(labels[0],"");$scope.dataSource.valid=!0;$scope.dataSourceForm.$dirty=!1},function(){notificationsService.error(labels[1],"")})},function(){notificationsService.error(labels[1],labels[2])})}))};$scope.showWizard=function(){editorService.open({view:"/App_Plugins/UmbracoForms/backoffice/DataSource/dialogs/wizard.html",dataSourceId:$scope.dataSource.id,size:"medium"})}});angular.module("umbraco").controller("UmbracoForms.Editors.DataSource.WizardController",function($scope,dataSourceWizardResource,notificationsService,editorService){$scope.currentStep=1;dataSourceWizardResource.getScaffold($scope.model.dataSourceId).then(function(response){$scope.wizard=response.data;$scope.hasPrimaryKeys=$scope.wizard.mappings.length!==_.where($scope.wizard.mappings,{prevalueKeyField:null}).length;dataSourceWizardResource.getAllFieldTypes().then(function(resp){$scope.fieldtypes=resp.data;$scope.ready=!0})});$scope.createForm=function(){dataSourceWizardResource.createForm($scope.wizard).then(function(){editorService.closeAll();notificationsService.success("Form created","")})};$scope.cancel=function(){editorService.closeAll()};$scope.gotoStep=function(step){$scope.currentStep=step};$scope.gotoThirdStep=function(){$scope.currentStep=$scope.hasPrimaryKeys?3:4};$scope.goBackToThirdStep=function(){$scope.currentStep=$scope.hasPrimaryKeys?3:2}});angular.module("umbraco").controller("UmbracoForms.Editors.Form.CopyController",function($scope,formResource,navigationService,localizationService,utilityService){function parseFolderId(id){return id.substring(7)}function nodeSelectHandler(args){args.event.preventDefault();args.event.stopPropagation();$scope.copiedForm.copyToFolder&&($scope.copiedForm.copyToFolder.selected=!1);$scope.copiedForm.copyToFolder=args.node;$scope.copiedForm.copyToFolder.selected=!0}$scope.dialogTreeApi={};$scope.title="";$scope.copiedForm={name:"",copyWorkflows:!1,copyToNewFolder:!1,copyToFolder:null};localizationService.localize("formCopy_title",[$scope.currentNode.name]).then(function(val){$scope.title=utilityService.hexHtmlToString(val)});$scope.copyForm=function(formId){var copyToFolderId=null;$scope.copiedForm.copyToNewFolder&&(copyToFolderId=$scope.copiedForm.copyToFolder.id==="-1"?"-1":parseFolderId($scope.copiedForm.copyToFolder.id));formResource.copy(formId,$scope.copiedForm.name,$scope.copiedForm.copyWorkflows,copyToFolderId).then(function(response){navigationService.syncTree({tree:"form",path:response.data.path.split(","),forceReload:!0,activate:!1});navigationService.hideNavigation()})};$scope.onTreeInit=function(){$scope.dialogTreeApi.callbacks.treeNodeSelect(nodeSelectHandler)};$scope.cancelCopy=function(){navigationService.hideNavigation()}});angular.module("umbraco").controller("UmbracoForms.Editors.Form.CreateController",function($scope,$location,formResource,navigationService,formHelper,formsValidationService){function navigateToCreateForm(templateAlias){$location.path("/forms/Form/edit/"+$scope.currentNode.id).search("create","true").search("template",templateAlias);navigationService.hideNavigation()}$scope.model={folderName:"",creatingFolder:!1};var node=$scope.currentNode;formResource.getAllTemplates().then(function(response){$scope.model.formTemplates=response.data});$scope.createEmptyForm=function(){navigateToCreateForm("")};$scope.createTemplateForm=function(templateAlias){navigateToCreateForm(templateAlias)};$scope.showCreateFolderForm=function(){$scope.model.creatingFolder=!0};$scope.createFolder=function(){$scope.model.errorMessage=null;formHelper.submitForm({scope:$scope,formCtrl:$scope.createFolderForm})&&formResource.createFolder(node.id,$scope.model.folderName).then(function(response){navigationService.hideMenu();var folder=response.data,currPath=node.path?node.path:"-1";navigationService.syncTree({tree:"form",path:(currPath+",folder-"+folder.id).split(","),forceReload:!0,activate:!0});formHelper.resetForm({scope:$scope,formCtrl:$scope.createFolderForm})},function(err){formHelper.resetForm({scope:$scope,formCtrl:$scope.createFolderForm,hasErrors:!0});$scope.model.errorMessage=formsValidationService.getErrorMessageFromExceptionResponse(err)})};$scope.hideDialog=function(){navigationService.hideDialog(!0)}});angular.module("umbraco").controller("UmbracoForms.Editors.Form.DeleteController",function($scope,formResource,recordResource,navigationService,notificationsService,treeService,localizationService,utilityService){function parseFolderId(id){return id.substring(folderIdPrefix.length)}var vm=this,folderIdPrefix="folder-",filter;vm.buttonState="init";vm.deletingFolder=$scope.currentNode.id.startsWith(folderIdPrefix);vm.deletingFolder&&formResource.isFolderEmpty(parseFolderId($scope.currentNode.id)).then(function(result){vm.canDelete=result.data});vm.title="";localizationService.localize("formDelete_title",[vm.deletingFolder?"folder":"form",$scope.currentNode.name]).then(function(val){vm.title=utilityService.hexHtmlToString(val)});vm.deletingFolder||(vm.recordDetail="",filter={form:$scope.currentNode.id},recordResource.getRecordsCount(filter).then(function(response){response.data.count===0?localizationService.localize("formDelete_noRecordDetail").then(function(val){vm.recordDetail=val}):localizationService.localize("formDelete_recordDetail",[response.data.count,response.data.lastSubmittedDate]).then(function(val){vm.recordDetail=val})}));vm.canDelete=!vm.deletingFolder;vm.performDelete=function(id){vm.buttonState="busy";localizationService.localizeMany(["formDelete_successMessageForForm","formDelete_failedMessageForForm","formDelete_successMessageForFolder","formDelete_failedMessageForFolder"]).then(function(labels){vm.deletingFolder?formResource.deleteFolderByGuid(parseFolderId(id)).then(function(){vm.buttonState="success";treeService.removeNode($scope.currentNode);navigationService.hideNavigation();notificationsService.success(labels[2])},function(err){vm.buttonState="error";notificationsService.error(labels[3],err.data.Message)}):formResource.deleteByGuid(id).then(function(){vm.buttonState="success";treeService.removeNode($scope.currentNode);navigationService.hideNavigation();notificationsService.success(labels[0])},function(err){vm.buttonState="error";notificationsService.error(labels[1],err.data.Message)})})};vm.cancelDelete=function(){navigationService.hideNavigation()}});angular.module("umbraco").controller("UmbracoForms.Editors.Form.EditController",function($scope,$routeParams,formResource,editorState,editorService,formService,notificationsService,contentEditingHelper,formHelper,navigationService,securityResource,localizationService,providerLocalizationHelper){function createAndLocalizeApps(){localizationService.localizeMany(["general_design","general_settings"]).then(function(labels){$scope.page.contentApps.unshift({name:labels[1],alias:"settings",icon:"icon-settings",view:"/App_Plugins/UmbracoForms/backoffice/Form/views/settings/settings.html",active:!1});$scope.page.contentApps.unshift({name:labels[0],alias:"design",icon:"icon-document-dashed-line",view:"/App_Plugins/UmbracoForms/backoffice/Form/views/design/design.html",active:!0})})}function parseFolderId(id){return id.substring(7)}var currentFormSecurity=null;$scope.page={loading:!0};$scope.page.contentApps=[];$scope.hasAccessToCurrentForm=!0;$scope.displayEditor=!0;securityResource.getForCurrentUser(!1).then(function(response){if($scope.security=response.data,currentFormSecurity=_.where(response.data.formsSecurity,{Form:$routeParams.id}),currentFormSecurity.length===1&&($scope.hasAccessToCurrentForm=currentFormSecurity[0].HasAccess),!$scope.hasAccessToCurrentForm||!$scope.security.userSecurity.manageForms){localizationService.localizeMany(["formPermissions_accessDeniedTitle","formEdit_accessDeniedMessage"]).then(function(labels){notificationsService.error(labels[0],labels[1])});navigationService.syncTree({tree:"form",path:["-1"],forceReload:!0,activate:!1}).then(function(response){navigationService.reloadNode(response.node)});return}});$routeParams.create?formResource.getScaffoldWithWorkflows($routeParams.template).then(function(response){$scope.form=response.data;editorState.set($scope.form);$scope.page.contentApps=$scope.form.apps;createAndLocalizeApps();$scope.page.loading=!1}):formResource.getWithWorkflowsByGuid($routeParams.id).then(function(response){$scope.form=response.data;localizationService.localizeMany(providerLocalizationHelper.getLocalizationKeysForFormWorkflows($scope.form.formWorkflows)).then(function(labels){providerLocalizationHelper.applyLocalizationLabelsToFormWorkflows($scope.form.formWorkflows,labels);$scope.saved=!0;navigationService.syncTree({tree:"form",path:response.data.path.split(","),forceReload:!1});angular.forEach($scope.form.pages,function(page){angular.forEach(page.fieldSets,function(fieldSet){angular.forEach(fieldSet.containers,function(container){angular.forEach(container.fields,function(field){field.removePrevalueEditor=!0})})})});editorState.set($scope.form);$scope.page.contentApps=$scope.form.apps;createAndLocalizeApps();$scope.page.loading=!1})},function(reason){var jsonErrorResponse=reason.data;localizationService.localize("formEdit_unableToLoadForm").then(function(val){notificationsService.add({headline:val,message:jsonErrorResponse.ExceptionMessage,type:"error",sticky:!0})});$scope.displayEditor=!1});$scope.editForm=function(form,section){editorService.open({template:"/App_Plugins/UmbracoForms/backoffice/Form/dialogs/formsettings.html",form:form,section:section,page:$scope.currentPage})};$scope.save=function(){var formFields,k,ensureNonNullWorkflowSettings;if(formHelper.submitForm({scope:$scope})){for($scope.page.saveButtonState="busy",formService.syncContainerWidths($scope.form),$routeParams.create&&$routeParams.id!=="-1"&&($scope.form.folderId=parseFolderId($routeParams.id)),formFields=formService.getAllFields($scope.form),k=0;k<formFields.length;k++)formFields[k].prevalues==null&&(formFields[k].prevalues=[]);ensureNonNullWorkflowSettings=function(workflows){for(var n,m=0;m<workflows.length;m++)for(n=0;n<workflows[m].settings.length;n++)workflows[m].settings[n].value==null&&(workflows[m].settings[n].value="")};ensureNonNullWorkflowSettings($scope.form.formWorkflows.onSubmit);ensureNonNullWorkflowSettings($scope.form.formWorkflows.onApprove);$scope.form.displayDefaultFields&&($scope.form.selectedDisplayFields=[]);formResource.saveWithWorkflows($scope.form).then(function(response){formHelper.resetForm({scope:$scope});contentEditingHelper.handleSuccessfulSave({scope:$scope,savedContent:response.data});$scope.ready=!0;editorState.set($scope.form);$scope.page.saveButtonState="success";navigationService.syncTree({tree:"form",path:response.data.path.split(","),forceReload:!0});localizationService.localize("formEdit_formSaved").then(function(val){notificationsService.success(val,"")})},function(err){formHelper.handleError(err);$scope.page.saveButtonState="error"})}}});angular.module("umbraco").controller("UmbracoForms.Editors.Form.EntriesController",function($scope,$routeParams,recordResource,formResource,editorService,userService,securityResource,notificationsService,navigationService,overlayService,localizationService,utilityService,preValueSourceResource,formService){function getFormField(fieldId){for(var fields=formService.getAllFields($scope.form),i=0;i<fields.length;i++)if(fields[i].id===fieldId)return fields[i];return null}function getPrevaluesForEditing(fieldId){if(!vm.allowEditingEntryDetails)return[];var formField=getFormField(fieldId);return formField.preValues}function parseEditedValues(selectedEntryDetail){return selectedEntryDetail.multipleValuesSaved?formService.getSelectedPrevalues(selectedEntryDetail.fieldPreValues,selectedEntryDetail.value):[selectedEntryDetail.value]}function getSelectedEntryDetailForFieldId(selectedEntryDetails,fieldId){for(var selectedEntryDetail,i=0;i<selectedEntryDetails.length;i++)if(selectedEntryDetail=selectedEntryDetails[i],selectedEntryDetail.fieldId===fieldId)return selectedEntryDetail}function resetEditedEntryDetails(){for(var selectedEntryDetail,originalEntry=$scope.records.results[vm.selectedEntry.index],i=0;i<vm.selectedEntry.details.length;i++)selectedEntryDetail=vm.selectedEntry.details[i],selectedEntryDetail.validationMessages=[],originalEntry.fields[i].value!==selectedEntryDetail.value&&(selectedEntryDetail.value=originalEntry.fields[i].value)}function promptForUnsavedChanges(onSubmit){vm.editingEntryDetails?$scope.contentForm.$dirty?localizationService.localizeMany(["prompt_unsavedChanges","prompt_unsavedChangesWarning","general_yes","general_no"]).then(function(labels){var overlay={view:"confirm",title:labels[0],content:labels[1],closeButtonLabel:labels[3],submitButtonLabel:labels[2],submitButtonStyle:"danger",close:function(){overlayService.close()},submit:function(){overlayService.close();vm.cancelEditEntryDetails();onSubmit()}};overlayService.open(overlay)}):(vm.cancelEditEntryDetails(),onSubmit()):onSubmit()}function limitRecordFields(records){var trueFalseArray=[],displayDefaultFields=$scope.form.displayDefaultFields,selectedDisplayFields=$scope.form.selectedDisplayFields,getSchemaFieldById;if(displayDefaultFields){var falseFromIndex=2,falseToIndex=records.schema.length-8;angular.forEach(records.schema,function(schema,index){var isVisible=(index<=falseFromIndex||index>=falseToIndex)&&schema.showOnListingScreen;trueFalseArray.push(isVisible);schema.sortOrder=index;schema.showIndex=index})}else angular.forEach(records.schema,function(schema,index){for(var isVisible=!1,formField=getFormField(schema.id),i=0;i<selectedDisplayFields.length;i++)if(formField&&selectedDisplayFields[i].alias===formField.alias&&!selectedDisplayFields[i].isSystem||!formField&&selectedDisplayFields[i].alias===schema.id&&selectedDisplayFields[i].isSystem){isVisible=!0;schema.name=selectedDisplayFields[i].caption;schema.sortOrder=i;schema.showIndex=index;break}trueFalseArray.push(isVisible)});records.showSchemaArray=trueFalseArray;getSchemaFieldById=function(fieldId,schema){for(var i=0;i<schema.length;i++)if(schema[i].id===fieldId)return schema[i];return null};angular.forEach(records.results,function(result){result.showRecordsArray=trueFalseArray;angular.forEach(result.fields,function(field,index){field.sortOrder=0;field.showIndex=index;var schemaField=getSchemaFieldById(field.fieldId,records.schema);schemaField&&schemaField.sortOrder&&(field.sortOrder=schemaField.sortOrder,field.showIndex=schemaField.showIndex)})})}function navigateEntryDetails(direction){var performNavigation=function(){var navigateToEntryIndex=vm.selectedEntry.index+direction,entriesCount=$scope.records.results.length,currentPage=$scope.filter.startIndex,totalNumberOfPages=$scope.records.totalNumberOfPages,entry;direction===1&&navigateToEntryIndex<entriesCount||direction===-1&&vm.selectedEntry.index>0?(entry=$scope.records.results[navigateToEntryIndex],vm.viewEntryDetails($scope.records.schema,entry)):totalNumberOfPages>1&&(direction===1&&currentPage<totalNumberOfPages||direction===-1&&currentPage!==1)&&($scope.filter.startIndex+=direction,vm.pagination.pageNumber+=direction,recordResource.getRecords($scope.filter).then(function(response){$scope.records=response.data;$scope.allIsChecked=$scope.selectedRows.length>=$scope.records.results.length;vm.pagination.totalPages=response.data.totalNumberOfPages;limitRecordFields($scope.records);var entry=direction===1?$scope.records.results[0]:$scope.records.results[$scope.records.results.length-1];vm.viewEntryDetails($scope.records.schema,entry)}))};promptForUnsavedChanges(performNavigation)}function loadRecords(filter,append){$scope.loading=!0;recordResource.getRecords(filter).then(function(response){$scope.loading=!1;$scope.records=append?$scope.records.results.concat(response.data.results):response.data;$scope.allIsChecked=$scope.selectedRows.length>=$scope.records.results.length;limitRecordFields($scope.records);vm.pagination.totalPages=response.data.totalNumberOfPages})}var vm=this,currentFormSecurity=null;vm.pagination={pageNumber:1,totalPages:1};vm.selectedEntry={};vm.showEntryDetails=!1;vm.allowEditingEntryDetails=!1;vm.editingEntryDetails=!1;vm.userLocale="";vm.canEditSensitiveData=!1;vm.keyboardShortcutsOverview=[];$scope.selectedRows=[];$scope.allIsChecked=!1;localizationService.localizeMany(["formEntries_entryDetails","formEntries_nextEntry","formEntries_previousEntry","formEntries_closeDetails","formEntries_workflowAuditTitleFormatSingular","formEntries_workflowAuditTitleFormatPlural"]).then(function(labels){vm.keyboardShortcutsOverview.push({name:labels[0],shortcuts:[{description:labels[1],keys:[{key:"→"}]},{description:labels[2],keys:[{key:"←"}]},{description:labels[3],keys:[{key:"esc"}]}]});vm.workflowAuditTitleFormatSingularLabel=labels[4];vm.workflowAuditTitleFormatPluralLabel=labels[5]});vm.title="";$scope.hasAccessToCurrentForm=!0;userService.getCurrentUser().then(function(response){vm.userLocale=response.locale;vm.canEditSensitiveData=response.userGroups.indexOf("sensitiveData")!==-1;securityResource.getForCurrentUser(!1).then(function(response){if($scope.security=response.data,currentFormSecurity=_.where(response.data.formsSecurity,{Form:$routeParams.id}),currentFormSecurity.length===1&&($scope.hasAccessToCurrentForm=currentFormSecurity[0].HasAccess),$scope.hasAccessToCurrentForm&&$scope.security.userSecurity.viewEntries)vm.allowEditingEntryDetails=$scope.security.userSecurity.editEntries,formResource.getWithWorkflowsByGuid($routeParams.id).then(function(response){$scope.form=response.data;$scope.loaded=!0;localizationService.localize("formEntries_title",[$scope.form.name]).then(function(val){vm.title=utilityService.hexHtmlToString(val)});var path=$scope.form.path.split(",");$scope.security.userSecurity.manageForms&&$scope.security.userSecurity.viewEntries?path.push(path[path.length-1]+"_entries"):path[path.length-1]+="_entries";navigationService.syncTree({tree:"form",path:path,forceReload:!1});loadRecords($scope.filter);recordResource.getRecordSetActions().then(function(response){function pushFormFieldPreValues(fieldPrevalueSourceId,fieldId){preValueSourceResource.getPreValuesByGuid(fieldPrevalueSourceId).then(function(response){var formField=getFormField(fieldId),i;for(formField.preValues=[],i=0;i<response.data.length;i++)formField.preValues.push(response.data[i])})}var formFields,fi,field;for($scope.recordSetActions=response.data.filter(function(action){return $scope.form.manualApproval||action.isAvailableForApprovedRecords}),formFields=formService.getAllFields($scope.form),fi=0;fi<formFields.length;fi++)field=formFields[fi],(!field.preValues||field.preValues.length===0)&&field.prevalueSourceId&&field.prevalueSourceId!=="00000000-0000-0000-0000-000000000000"&&pushFormFieldPreValues(field.prevalueSourceId,field.id)})});else{localizationService.localizeMany(["formPermissions_accessDeniedTitle","formEntries_accessDeniedMessage"]).then(function(labels){notificationsService.error(labels[0],labels[1])});navigationService.syncTree({tree:"form",path:["-1"],forceReload:!0,activate:!1}).then(function(response){navigationService.reloadNode(response.node)});return}})});$scope.states=[{name:"Approved",isChecked:!0},{name:"Submitted",isChecked:!0}];$scope.filter={startIndex:1,length:20,form:$routeParams.id,sortBy:"created",sortOrder:"descending",states:["Approved","Submitted"],localTimeOffset:(new Date).getTimezoneOffset()};$scope.records=[];$scope.loading=!1;$scope.hiddenFields=[2];vm.nextPage=function(){$scope.filter.startIndex++;loadRecords($scope.filter)};vm.prevPage=function(){$scope.filter.startIndex--;loadRecords($scope.filter)};vm.goToPageNumber=function(pageNumber){$scope.filter.startIndex=pageNumber;loadRecords($scope.filter)};vm.viewEntryDetails=function(schema,entry,event){var entryIndex,entryCount,excludeItems,index,schemaItem,valueItem,itemToPush;if(vm.selectedEntry={},entryIndex=$scope.records.results.indexOf(entry),entryCount=$scope.filter.length*($scope.filter.startIndex-1)+(entryIndex+1),vm.selectedEntry=entry,vm.selectedEntry.index=entryIndex,vm.selectedEntry.entryCount=entryCount,vm.selectedEntry.details=[],schema&&entry)for(excludeItems=["member","state","created","updated","recordId","umbracoPageId","umbracoPageName","workflowAuditSummary"],index=0;index<schema.length;index++)(schemaItem=schema[index],excludeItems.indexOf(schemaItem.id)===-1)&&(valueItem=entry.fields[index].value,itemToPush={name:schemaItem.name,fieldId:schemaItem.id,fieldPreValues:getPrevaluesForEditing(schemaItem.id),value:valueItem,displayValue:vm.fieldValueOrPrevalueCaption(valueItem,schemaItem.id),view:schemaItem.view[0]==="~"||schemaItem.view[0]==="/"?schemaItem.view.replace("~/","/"):"/App_Plugins/UmbracoForms/backoffice/Common/RenderTypes/"+schemaItem.view+".html",viewName:schemaItem.view,editViewName:schemaItem.editView,editView:schemaItem.editView?schemaItem.editView[0]==="~"||schemaItem.editView[0]==="/"?schemaItem.editView.replace("~/","/"):"/App_Plugins/UmbracoForms/backoffice/Common/EditTypes/"+schemaItem.editView+".html":"",containsSensitiveData:schemaItem.containsSensitiveData},vm.selectedEntry.details.push(itemToPush));localizationService.localize("formEntries_selectedEntryPaging",[vm.selectedEntry.entryCount,$scope.records.totalNumberOfResults]).then(function(val){vm.selectedEntryPaging=val});vm.showEntryDetails=!0;event&&event.stopPropagation()};vm.editEntryDetails=function(){vm.editingEntryDetails=!0};vm.saveEntryDetails=function(){for(var selectedEntryDetail,originalEntry=$scope.records.results[vm.selectedEntry.index],updateRecordModel={recordId:vm.selectedEntry.id,formId:vm.selectedEntry.form,fieldValues:[]},i=0;i<vm.selectedEntry.details.length;i++)selectedEntryDetail=vm.selectedEntry.details[i],selectedEntryDetail.validationMessages=[],originalEntry.fields[i].value!==selectedEntryDetail.value&&updateRecordModel.fieldValues.push({fieldId:selectedEntryDetail.fieldId,values:parseEditedValues(selectedEntryDetail)});if(updateRecordModel.fieldValues.length===0){vm.editingEntryDetails=!1;$scope.contentForm.$setPristine();return}localizationService.localizeMany(["formEntries_updateRecordSuccess","formEntries_updateRecordError"]).then(function(labels){recordResource.updateRecord(updateRecordModel).then(function(response){var selectedEntryDetail,i,j,fieldMessage;if(response.data.success){for(i=0;i<vm.selectedEntry.details.length;i++)selectedEntryDetail=vm.selectedEntry.details[i],originalEntry.fields[i].value!==selectedEntryDetail.value&&(originalEntry.fields[i].value=selectedEntryDetail.value,selectedEntryDetail.displayValue=vm.fieldValueOrPrevalueCaption(selectedEntryDetail.value,selectedEntryDetail.fieldId));notificationsService.success(labels[0]);vm.editingEntryDetails=!1;$scope.contentForm.$setPristine()}else{for(j=0;j<response.data.fieldMessages.length;j++)fieldMessage=response.data.fieldMessages[j],selectedEntryDetail=getSelectedEntryDetailForFieldId(vm.selectedEntry.details,fieldMessage.fieldId),selectedEntryDetail.validationMessages=fieldMessage.messages;notificationsService.error(labels[1])}},function(err){notificationsService.error(labels[1],err.data.Message)})})};vm.cancelEditEntryDetails=function(){resetEditedEntryDetails();vm.editingEntryDetails=!1;$scope.contentForm.$setPristine()};vm.closeEntryDetails=function(){promptForUnsavedChanges(function(){vm.selectedEntry={};vm.showEntryDetails=!1})};vm.nextEntryDetails=function(){navigateEntryDetails(1)};vm.prevEntryDetails=function(){navigateEntryDetails(-1)};vm.datePickerChange=function(dateRange){$scope.filter.startDate=dateRange.startDate;$scope.filter.endDate=dateRange.endDate;$scope.filterChanged()};vm.toggleRecordState=function(recordState){if(recordState.isChecked)$scope.filter.states.push(recordState.name);else{var index=$scope.filter.states.indexOf(recordState.name);index!==-1&&$scope.filter.states.splice(index,1)}$scope.filterChanged()};vm.getWorkflowSummaryTitle=function(field){var succeeded=parseInt(field.split("/")[0]),total=parseInt(field.split("/")[1]),format=total===1?vm.workflowAuditTitleFormatSingularLabel:vm.workflowAuditTitleFormatPluralLabel;return format.replace("%0%",succeeded).replace("%1%",total)};vm.fieldValueOrPrevalueCaption=function(value,fieldId){var formField,result,prevalue,matchedWithPrevalue,i,prevalueValueSeparator,valueParts,resultParts,j,k;if(!value)return null;if(formField=getFormField(fieldId),!formField)return value;if(result=value,formField.preValues&&formField.preValues.length>0){for(matchedWithPrevalue=!1,i=0;i<formField.preValues.length;i++)prevalue=formField.preValues[i],prevalue.value===value&&(matchedWithPrevalue=!0,result=prevalue.caption&&prevalue.caption.length>0?prevalue.caption:value);if(prevalueValueSeparator=", ",!matchedWithPrevalue&&value.includes(prevalueValueSeparator)){for(valueParts=value.split(prevalueValueSeparator),resultParts=[],j=0;j<valueParts.length;j++){for(matchedWithPrevalue=!1,k=0;k<formField.preValues.length;k++)if(prevalue=formField.preValues[k],prevalue.value===valueParts[j]){resultParts.push(prevalue.caption&&prevalue.caption.length>0?prevalue.caption:valueParts[j]);matchedWithPrevalue=!0;break}matchedWithPrevalue||resultParts.push(valueParts[j])}result=resultParts.join(prevalueValueSeparator)}}return result};$scope.toggleRecordStateSelection=function(recordState){var idx=$scope.filter.states.indexOf(recordState);idx>-1?$scope.filter.states.splice(idx,1):$scope.filter.states.push(recordState)};$scope.toggleSelection=function(field){var idx=$scope.hiddenFields.indexOf(field);idx>-1?$scope.hiddenFields.splice(idx,1):$scope.hiddenFields.push(field)};$scope.edit=function(schema){editorService.open({view:"/App_Plugins/UmbracoForms/backoffice/Form/dialogs/entriessettings.html",schema:schema,toggle:$scope.toggleSelection,hiddenFields:$scope.hiddenFields,filter:$scope.filter,size:"medium"})};$scope.next=function(){$scope.filter.startIndex++};$scope.prev=function(){$scope.filter.startIndex--};$scope.goToPage=function(index){$scope.filter.startIndex=index};$scope.search=_.debounce(function(resetIndex){$scope.loading=!0;$scope.reset(resetIndex);$scope.$apply(function(){recordResource.getRecords($scope.filter).then(function(response){$scope.loading=!1;$scope.records=response.data;vm.pagination.totalPages=response.data.totalNumberOfPages;limitRecordFields($scope.records)})})},300);$scope.filterChanged=function(){$scope.search(!0)};$scope.reset=function(resetIndex){$scope.selectedRows.length=0;$scope.allIsChecked=!1;resetIndex&&($scope.filter.startIndex=1)};$scope.clearSelection=function(){var i,row;for($scope.selectedRows.length=0,$scope.allIsChecked=!1,i=0;i<$scope.records.results.length;i++)row=$scope.records.results[i],row.selected=!1};$scope.more=function(){$scope.filter.startIndex++;loadRecords($scope.filter,!0)};$scope.toggleRow=function(row){if(row.selected=!row.selected,row.selected)$scope.selectedRows.push(row.id),$scope.allIsChecked=$scope.selectedRows.length>=$scope.records.results.length;else{var i=$scope.selectedRows.indexOf(row.id);$scope.selectedRows.splice(i,1);$scope.allIsChecked=!1}localizationService.localize("formEntries_selectedRowsDescription",[$scope.selectedRows.length,$scope.records.totalNumberOfResults]).then(function(val){$scope.selectedRowsDescription=val})};$scope.toggleRowLegacy=function(row){if(row.selected)$scope.selectedRows.push(row.id),$scope.allIsChecked=$scope.selectedRows.length>=$scope.records.results.length;else{var i=$scope.selectedRows.indexOf(row.id);$scope.selectedRows.splice(i,1);$scope.allIsChecked=!1}};$scope.toggleAllLegacy=function($event){var checkbox=$event.target,i,entity;for($scope.selectedRows.length=0,i=0;i<$scope.records.results.length;i++)entity=$scope.records.results[i],entity.selected=checkbox.checked,checkbox.checked&&$scope.selectedRows.push(entity.id)};$scope.toggleAll=function(){for(var entity,newValue=!$scope.allIsChecked,i=0;i<$scope.records.results.length;i++)entity=$scope.records.results[i],entity.selected!==newValue&&$scope.toggleRow(entity)};$scope.executeRecordSetAction=function(action){var model={formId:$scope.form.id,recordKeys:$scope.selectedRows,actionId:action.id},performAction=function(){$scope.recordSetActionExecuting=!0;localizationService.localizeMany(["formEntries_executeCompleteTitle","formEntries_executeSuccessMessage","formEntries_executeErrorMessage"]).then(function(labels){recordResource.executeRecordSetAction(model).then(function(){$scope.reset(!0);loadRecords($scope.filter,!1);$scope.recordSetActionExecuting=!1;notificationsService.success(labels[0],labels[1].replace("%0%",action.name))},function(err){notificationsService.error(labels[0],labels[2].replace("%0%",action.name).replace("%1%",err))})})},presentConfirmation=function(confirmMessage){var overlay={view:"confirm",title:"Confirmation",content:confirmMessage,closeButtonLabel:"No",submitButtonLabel:"Yes",submitButtonStyle:"danger",close:function(){overlayService.close()},submit:function(){performAction();overlayService.close()}};overlayService.open(overlay)};action.needsConfirm&&action.confirmMessage.length>0?action.confirmMessage[0]==="@"?localizationService.localize(action.confirmMessage).then(function(val){presentConfirmation(val)}):presentConfirmation(action.confirmMessage):performAction()}});angular.module("umbraco").controller("UmbracoForms.Editors.Form.EntriesSettingsController",function($scope,$timeout,exportResource,utilityService,editorService,localizationService,providerLocalizationHelper){var formId=$scope.model.filter.form;exportResource.getExportTypes(formId).then(function(response){$scope.exportTypes=response.data;localizationService.localizeMany(providerLocalizationHelper.getLocalizationKeys("formProviderExportTypes",$scope.exportTypes)).then(function(labels){providerLocalizationHelper.applyLocalizationLabels($scope.exportTypes,labels)})});$scope.close=function(){editorService.closeAll()};$scope.export=function(type,filter){if(!$scope.exporting){$scope.exporting=!0;filter.exportType=type.id;var serverTimeNeedsOffsetting=utilityService.serverTimeNeedsOffsetting();serverTimeNeedsOffsetting&&(filter.localTimeOffset=(new Date).getTimezoneOffset());exportResource.generateExport(filter).then(function(response){var url=exportResource.getExportUrl(response.data.formId,response.data.fileName),iframe=document.createElement("iframe");iframe.id="hiddenDownloadframe";iframe.style.display="none";document.body.appendChild(iframe);iframe.src=url;$timeout(function(){document.body.removeChild(iframe);$scope.exporting=!1},1e3)})}}}),function(){"use strict";function Controller($scope,formResource,navigationService){function exportForm(){formResource.export($scope.currentNode.id);navigationService.hideMenu()}function cancel(){navigationService.hideNavigation()}var vm=this;vm.exportForm=exportForm;vm.cancel=cancel}angular.module("umbraco").controller("UmbracoForms.Editors.Form.ExportController",Controller)}();angular.module("umbraco").controller("UmbracoForms.Editors.Form.ImportController",function($scope,formResource,navigationService,Upload,securityResource,treeService){var vm=this;vm.serverErrorMessage="";vm.state="upload";vm.model={};vm.uploadStatus="";vm.cancelButtonLabel="cancel";$scope.handleFiles=function(files){files&&files.length>0&&$scope.upload(files[0])};$scope.upload=function(file){Upload.upload({url:"backoffice/UmbracoForms/Form/Upload",fields:{},file:file}).success(function(data){data.notifications&&data.notifications.length>0?(vm.uploadStatus="error",vm.serverErrorMessage=data.notifications[0].message):(vm.uploadStatus="done",vm.model=data,vm.state="confirm")}).error(function(evt,status){$scope.uploadStatus="error";status===404?$scope.serverErrorMessage="File not found":status===400?$scope.serverErrorMessage=evt.message:evt.InnerException?($scope.serverErrorMessage=evt.InnerException.ExceptionMessage,evt.InnerException.StackTrace&&evt.InnerException.StackTrace.indexOf("ValidateRequestEntityLength")>0&&($scope.serverErrorMessage="File too large to upload")):evt.Message&&($scope.serverErrorMessage=evt.Message)})};$scope.import=function(){securityResource.getForCurrentUser(!1).then(function(securityResponse){var getRootFolderIdForUser=function(startFolders){return startFolders.length===1?startFolders[0]:null},getFolderId=function(currentNodeId,startFolders){return currentNodeId==="-1"?getRootFolderIdForUser(startFolders):currentNodeId.replace("folder-","")},folderId=getFolderId($scope.currentNode.id,securityResponse.data.startFolders);formResource.import(vm.model.tempFileName,folderId).then(function(){vm.state="done";vm.cancelButtonLabel="general_close";navigationService.syncTree({tree:"form",path:$scope.currentNode.path.split(","),forceReload:!0,activate:!0});treeService.loadNodeChildren({node:$scope.currentNode,section:$scope.currentNode.section})})})};$scope.close=function(){navigationService.hideDialog()}});angular.module("umbraco").controller("UmbracoForms.Editors.Form.MoveController",function($scope,formResource,treeService,navigationService,eventsService,notificationsService,formsValidationService,localizationService){function nodeSelectHandler(args){args.event.preventDefault();args.event.stopPropagation();$scope.target&&($scope.target.selected=!1);$scope.target=args.node;$scope.target.selected=!0}function parseFolderId(id){return id.substring(folderIdPrefix.length)}var folderIdPrefix="folder-",movingFolder=$scope.currentNode.id.startsWith(folderIdPrefix);$scope.dialogTreeApi={};$scope.source=_.clone($scope.currentNode);$scope.title="";$scope.successMessage="";localizationService.localize("formMove_title",[$scope.source.name]).then(function(val){$scope.title=val});$scope.move=function(){function handleSuccess(type,path){$scope.errorMessage=null;treeService.removeNode($scope.currentNode);navigationService.syncTree({tree:"form",path:path.split(","),forceReload:!0,activate:!0});localizationService.localize("formMove_successMessage",[$scope.source.name,$scope.target.name]).then(function(val){$scope.successMessage=val});localizationService.localizeMany(["formMove_successNotificationHeader","formMove_successNotificationDescriptionForForm","formMove_successNotificationDescriptionForFolder"]).then(function(labels){notificationsService.showNotification({type:0,header:labels[0],message:type==="form"?labels[1]:labels[2]})});navigationService.hideMenu();eventsService.emit("app.refreshEditor")}function handleError(err){$scope.errorMessage=formsValidationService.getErrorMessageFromExceptionResponse(err)}$scope.errorMessage=null;movingFolder?formResource.moveFolder($scope.target.id,parseFolderId($scope.source.id)).then(function(response){handleSuccess("folder",response.data)},function(err){handleError(err)}):formResource.moveForm($scope.target.id,$scope.source.id).then(function(response){handleSuccess("form",response.data)},function(err){handleError(err)})};$scope.onTreeInit=function(){$scope.dialogTreeApi.callbacks.treeNodeSelect(nodeSelectHandler)};$scope.close=function(){navigationService.hideDialog()}});angular.module("umbraco").controller("UmbracoForms.Editors.Form.RenameController",function($scope,formResource,navigationService,formHelper,notificationsService,formsValidationService,localizationService){function parseFolderId(id){return id.substring(folderIdPrefix.length)}var vm=this,folderIdPrefix="folder-",node=$scope.currentNode;vm.buttonState="init";vm.errorMessage=null;vm.newName=node.name;vm.deletingFolder=$scope.currentNode.id.startsWith(folderIdPrefix);vm.performRename=function(){vm.deletingFolder&&(vm.errorMessage=null,formHelper.submitForm({scope:$scope,formCtrl:$scope.renameForm})&&formResource.renameFolder(parseFolderId(node.id),vm.newName).then(function(){var path=$scope.currentNode.path;navigationService.syncTree({tree:"form",path:path.split(","),forceReload:!0,activate:!0});localizationService.localizeMany(["formRename_successNotificationHeader","formRename_successNotificationDescriptionForFolder"]).then(function(labels){notificationsService.showNotification({type:0,header:labels[0],message:labels[1]})});navigationService.hideMenu()},function(err){formHelper.resetForm({scope:$scope,formCtrl:$scope.createFolderForm,hasErrors:!0});vm.errorMessage=formsValidationService.getErrorMessageFromExceptionResponse(err)}))};vm.cancelRename=function(){navigationService.hideNavigation()}});angular.module("umbraco").controller("UmbracoForms.Overlays.FieldsetSettingsOverlay",function($scope,formService,editorService,localizationService){function localizeConditionSelectors(types,key){var keys,i;if(types){for(keys=[],i=0;i<types.length;i++)keys.push("formConditions_"+key+types[i].value);localizationService.localizeMany(keys).then(function(labels){for(var i=0;i<labels.length;i++)types[i].name=labels[i]})}}function setColumnCountDescription(){if($scope.model.fieldset.containers){var tokens=[$scope.model.fieldset.containers.length];localizationService.localize("fieldSetColumns_columnNumberDescription",tokens).then(function(val){vm.fieldSetContainersDescription=val})}}var vm=this,oldFieldset,oldContainers;vm.labels={};vm.enableConditionsToggleText="";vm.fieldSetContainersDescription="";vm.actionTypes=[];vm.logicTypes=[];vm.operators=[];vm.actionTypes=formService.getActionTypes();vm.logicTypes=formService.getLogicTypes();vm.operators=formService.getOperators();localizeConditionSelectors(vm.actionTypes,"actionType");localizeConditionSelectors(vm.logicTypes,"logicType");localizeConditionSelectors(vm.operators,"operator");localizationService.localize("formConditions_enableConditions").then(function(val){vm.enableConditionsToggleText=val});$scope.model.fieldset.condition||($scope.model.fieldset.condition={},$scope.model.fieldset.condition.actionType=vm.actionTypes[0].value,$scope.model.fieldset.condition.logicType=vm.logicTypes[0].value);oldFieldset=angular.copy($scope.model.fieldset);oldContainers=angular.copy($scope.model.fieldset.containers);setColumnCountDescription();vm.deleteConditionRule=function(rules,rule){formService.deleteConditionRule(rules,rule)};vm.addConditionRule=function(condition){formService.addEmptyConditionRule(condition);var lastIndex=condition.rules.length-1;condition.rules[lastIndex].operator=vm.operators[0].value};vm.conditionFieldSelected=function(selectedField,rule){formService.populateConditionRulePrevalues(selectedField,rule,$scope.model.fields)};vm.canAddColumn=function(){var index=$scope.model.fieldset.containers.length;return index<parseInt(Umbraco.Sys.ServerVariables.umbracoPlugins.forms.maxNumberOfColumnsInFormGroup)};vm.addColumn=function(){if(vm.canAddColumn()){var index=$scope.model.fieldset.containers.length;formService.addContainer($scope.model.fieldset,index);setColumnCountDescription()}};vm.removeColumn=function(container){formService.deleteContainer($scope.model.fieldset,container);setColumnCountDescription()};vm.toggleConditions=function(){$scope.model.fieldset.condition.enabled=!$scope.model.fieldset.condition.enabled};vm.close=function(){$scope.model.fieldset.containers=oldContainers;$scope.model.fieldset=oldFieldset;editorService.close()};vm.submit=function(){editorService.close()}});angular.module("umbraco").controller("UmbracoForms.Overlays.FieldSettingsOverlay",function($scope,localizationService,formService,userService,editorService,formHelper,fieldResource){function matchValidationType(){if($scope.model.field.regex!==null&&$scope.model.field.regex!==""&&$scope.model.field.regex!==undefined){var match=!1;if(vm.selectedValidationType&&vm.selectedValidationType.key==="custom"){vm.showValidationPattern=!0;return}angular.forEach(vm.validationTypes,function(validationType){match||$scope.model.field.regex!==validationType.pattern||(vm.selectedValidationType=validationType,vm.showValidationPattern=!0,match=!0)});match||angular.forEach(vm.validationTypes,function(validationType){validationType.key==="custom"&&(vm.selectedValidationType=validationType,vm.showValidationPattern=!0)})}}function localizeConditionSelectors(types,key){var keys,i;if(types){for(keys=[],i=0;i<types.length;i++)keys.push("formConditions_"+key+types[i].value);localizationService.localizeMany(keys).then(function(labels){for(var i=0;i<labels.length;i++)types[i].name=labels[i]})}}var vm=this,i;for(vm.showValidationPattern=!1,vm.focusOnMandatoryField=!1,vm.canEditSensitiveData=!1,vm.loading=!0,vm.selectedValidationType=null,vm.actionTypes=[],vm.logicTypes=[],vm.operators=[],vm.mandatoryToggleText="",vm.sensitiveDataToggleText="",vm.enableConditionsToggleText="",vm.multipleFilesToggleTextOn="",vm.multipleFilesToggleTextOff="",fieldResource.getValidationPatterns().then(function(response){var i,validationPattern,labelKeys;for(vm.validationTypes=[],i=0;i<response.data.length;i++)validationPattern=response.data[i],vm.validationTypes.push({name:validationPattern.name,key:validationPattern.alias,pattern:validationPattern.pattern,labelKey:validationPattern.labelKey,readOnly:validationPattern.readOnly});for(vm.validationTypes.push({name:"",key:"custom",pattern:"",labelKey:"validation_enterCustomValidation",readOnly:!1}),labelKeys=[],i=0;i<vm.validationTypes.length;i++)labelKeys.push(vm.validationTypes[i].labelKey);localizationService.localizeMany(labelKeys).then(function(labels){for(i=0;i<labels.length;i++){var validationType=vm.validationTypes[i];validationType.name.length===0&&labels[i]&&(validationType.name=labels[i])}});matchValidationType()}),localizationService.localize("validation_fieldIsMandatory").then(function(label){vm.mandatoryToggleText=label}),localizationService.localizeMany(["fieldSettings_sensitiveDataLabel","formConditions_enableConditions","fieldSettings_multipleFilesToggleTextOn","fieldSettings_multipleFilesToggleTextOff"]).then(function(labels){vm.sensitiveDataToggleText=labels[0];vm.enableConditionsToggleText=labels[1];vm.multipleFilesToggleTextOn=labels[2];vm.multipleFilesToggleTextOff=labels[3]}),vm.fieldConditions=angular.copy($scope.model.fields),i=0;i<vm.fieldConditions.length;i++)if(vm.fieldConditions[i].id===$scope.model.field.id){vm.fieldConditions.splice(i,1);break}vm.actionTypes=formService.getActionTypes();vm.logicTypes=formService.getLogicTypes();vm.operators=formService.getOperators();localizeConditionSelectors(vm.actionTypes,"actionType");localizeConditionSelectors(vm.logicTypes,"logicType");localizeConditionSelectors(vm.operators,"operator");userService.getCurrentUser().then(function(user){vm.canEditSensitiveData=user.userGroups.indexOf("sensitiveData")!==-1;vm.loading=!1});$scope.model.field.condition||($scope.model.field.condition={},$scope.model.field.condition.actionType=vm.actionTypes[0].value,$scope.model.field.condition.logicType=vm.logicTypes[0].value);$scope.model.field.prevalueSourceId||($scope.model.field.prevalueSourceId="00000000-0000-0000-0000-000000000000");vm.changeValidationType=function(selectedValidationType){selectedValidationType?($scope.model.field.regex=selectedValidationType.pattern,vm.showValidationPattern=!0):($scope.model.field.regex="",vm.showValidationPattern=!1)};vm.changeValidationPattern=function(){matchValidationType()};vm.openFieldTypePicker=function(field){vm.focusOnMandatoryField=!1;var fieldTypePicker={view:"/App_Plugins/UmbracoForms/backoffice/Form/overlays/fieldtypepicker/field-type-picker.html",title:"Choose answer type",hideSubmitButton:!0,size:"medium",submit:function(model){formService.loadFieldTypeSettings(field,model.fieldType);field.removePrevalueEditor=!0;editorService.close()},close:function(){editorService.close()}};editorService.open(fieldTypePicker)};vm.deleteConditionRule=function(rules,rule){formService.deleteConditionRule(rules,rule)};vm.addConditionRule=function(condition){formService.addEmptyConditionRule(condition);var lastIndex=condition.rules.length-1;condition.rules[lastIndex].operator=vm.operators[0].value};vm.getPrevalues=function(field){formService.loadFieldTypePrevalues(field)};vm.conditionFieldSelected=function(selectedField,rule){formService.populateConditionRulePrevalues(selectedField,rule,$scope.model.fields)};vm.submitOnEnter=function(event){event&&event.keyCode===13&&submit()};vm.submit=function(){$scope.model.submit&&formHelper.submitForm({scope:$scope})&&$scope.model.submit($scope.model)};vm.close=function(){$scope.model.close&&$scope.model.close()};vm.toggleConditions=function(){$scope.model.field.condition.enabled=!$scope.model.field.condition.enabled};vm.toggleMandatory=function(){$scope.model.field.mandatory=!$scope.model.field.mandatory};vm.toggleSensitiveData=function(){$scope.model.field.containsSensitiveData=!$scope.model.field.containsSensitiveData};vm.toggleAllowMultipleFileUploads=function(){$scope.model.field.allowMultipleFileUploads=!$scope.model.field.allowMultipleFileUploads}});angular.module("umbraco").controller("UmbracoForms.Overlays.FieldTypePickerOverlayController",function($scope,formResource,localizationService,providerLocalizationHelper){var vm=this;vm.fieldTypes=[];vm.searchTerm="";formResource.getAllFieldTypesWithSettings().then(function(response){vm.fieldTypes=response.data;localizationService.localizeMany(providerLocalizationHelper.getLocalizationKeys("formProviderFieldTypes",vm.fieldTypes)).then(function(labels){providerLocalizationHelper.applyLocalizationLabels(vm.fieldTypes,labels)})});vm.pickFieldType=function(selectedFieldType){$scope.model.fieldType=selectedFieldType;$scope.model.submit($scope.model)};vm.filterItems=function(){$scope.model.itemDetails=null};vm.showDetailsOverlay=function(workflowType){$scope.model.itemDetails={icon:workflowType.icon,title:workflowType.name,description:workflowType.description}};vm.hideDetailsOverlay=function(){$scope.model.itemDetails=null};vm.close=function(){$scope.model.close&&$scope.model.close()}});angular.module("umbraco").controller("UmbracoForms.FormPickerOverlayController",function($scope,formPickerResource){function pickForm(form){form.selected?(form.selected=!1,angular.forEach($scope.model.selectedForms,function(selectedForm,index){selectedForm.id===form.id&&$scope.model.selectedForms.splice(index,1)})):(form.selected=!0,$scope.model.selectedForms.push(form),$scope.model.multiPicker||$scope.model.submit($scope.model))}function loadFormsList(){vm.loading=!0;formPickerResource.getFormsForPicker($scope.model.allowedForms||null).then(function(response){vm.forms=response;vm.loading=!1;vm.formsLoaded=!0},function(){vm.error="An error has occured while loading the available forms.";vm.loading=!1})}function nodeSelectHandler(args){args.event.preventDefault();args.event.stopPropagation();args.node.id.startsWith("folder-")||pickForm(args.node)}function treeNodeExpandedHandler(){setTimeout(function(){var pickerElements=document.getElementsByClassName("umb-form-picker-tree"),pickerElement,buttonsToFix,i;if(pickerElements.length>0)for(pickerElement=pickerElements[0],buttonsToFix=pickerElement.querySelectorAll('[data-element="tree-item-expand"]:not([type="button"])'),i=0;i<buttonsToFix.length;i++)buttonsToFix[i].setAttribute("type","button")},100)}var vm=this;vm.multiPicker=$scope.model.multiPicker;vm.submit=$scope.model.submit;vm.close=$scope.model.close;vm.loading=!1;vm.forms=[];vm.error=null;vm.dialogTreeApi={};vm.allowFolderSelection=!$scope.model.allowedForms||$scope.model.allowedForms.length===0;vm.selectView=vm.allowFolderSelection?"folder":"list";vm.formsLoaded=!1;$scope.$watch("vm.selectView",function(value){value!=="list"||vm.formsLoaded||loadFormsList()});$scope.model.title||($scope.model.title="Select a form");$scope.model.multiPicker||($scope.model.hideSubmitButton=!0);$scope.model.selectedForms||($scope.model.selectedForms=[]);vm.selectView==="list"&&loadFormsList();vm.pickForm=pickForm;vm.onTreeInit=function(){vm.dialogTreeApi.callbacks.treeNodeSelect(nodeSelectHandler);vm.dialogTreeApi.callbacks.treeNodeExpanded(treeNodeExpandedHandler)}});angular.module("umbraco").controller("UmbracoForms.Overlays.PageSettingsOverlay",function($scope,formService,editorService,localizationService){function localizeConditionSelectors(types,key){var keys,i;if(types){for(keys=[],i=0;i<types.length;i++)keys.push("formConditions_"+key+types[i].value);localizationService.localizeMany(keys).then(function(labels){for(var i=0;i<labels.length;i++)types[i].name=labels[i]})}}var vm=this,oldButtonCondition;vm.actionTypes=[];vm.logicTypes=[];vm.operators=[];vm.enableConditionsToggleText="";oldButtonCondition=angular.copy($scope.model.page.buttonCondition);localizationService.localize("formConditions_enableConditions").then(function(val){vm.enableConditionsToggleText=val});vm.actionTypes=formService.getActionTypes();vm.logicTypes=formService.getLogicTypes();vm.operators=formService.getOperators();localizeConditionSelectors(vm.actionTypes,"actionType");localizeConditionSelectors(vm.logicTypes,"logicType");localizeConditionSelectors(vm.operators,"operator");$scope.model.page.buttonCondition||($scope.model.page.buttonCondition={},$scope.model.page.buttonCondition.actionType=vm.actionTypes[0].value,$scope.model.page.buttonCondition.logicType=vm.logicTypes[0].value);vm.deleteConditionRule=function(rules,rule){formService.deleteConditionRule(rules,rule)};vm.addConditionRule=function(condition){formService.addEmptyConditionRule(condition);var lastIndex=condition.rules.length-1;condition.rules[lastIndex].operator=vm.operators[0].value};vm.conditionFieldSelected=function(selectedField,rule){formService.populateConditionRulePrevalues(selectedField,rule,$scope.model.fields)};vm.toggleConditions=function(){$scope.model.page.buttonCondition.enabled=!$scope.model.page.buttonCondition.enabled};vm.close=function(){$scope.model.page.buttonCondition=oldButtonCondition;editorService.close()};vm.submit=function(){editorService.close()}});angular.module("umbraco").controller("UmbracoForms.ThemePickerOverlayController",function($scope,themePickerResource){var vm=this;vm.loading=!0;vm.themes=[];vm.error=null;$scope.model.title||($scope.model.title="Select a theme");$scope.model.multiPicker||($scope.model.hideSubmitButton=!0);$scope.model.selectedThemes||($scope.model.selectedThemes=[]);themePickerResource.getThemes().then(function(response){vm.themes=response;vm.loading=!1},function(){vm.error="An Error has occured while loading!";vm.loading=!1});vm.pickTheme=function(theme){theme.selected?(theme.selected=!1,angular.forEach($scope.model.selectedThemes,function(selectedTheme,index){selectedTheme.name===theme.name&&$scope.model.selectedThemes.splice(index,1)})):(theme.selected=!0,$scope.model.selectedThemes.push(theme),$scope.model.multiPicker||$scope.model.submit($scope.model))}});angular.module("umbraco").controller("UmbracoForms.Overlays.SubmitMessageOverlayController",function($scope,$q,localizationService,fieldResource){function stripHtml(html){var doc=(new DOMParser).parseFromString(html,"text/html");return doc.body.textContent||""}function formatAsHtml(text){if(text&&text.trim().length>0){var lines=text.replace(/\r/g,"").split(/\n\n/),html="<p>"+lines.join("<\/p><p>")+"<\/p>";return html.replace(/\n/g,"<br/>")}return""}function toggleMessageOnSubmitIsHtml(){$scope.model.messageOnSubmitIsHtml=!$scope.model.messageOnSubmitIsHtml;$scope.model.messageOnSubmitIsHtml?($scope.model.messageOnSubmit=formatAsHtml($scope.model.messageOnSubmit),vm.messageOnSubmitHtmlEditor.value=$scope.model.messageOnSubmit):$scope.model.messageOnSubmit=stripHtml($scope.model.messageOnSubmit)}function init(){var promises=[];promises.push(localizationService.localizeMany(["formWorkflows_messageOnSubmitIsHtmlToggleTextOn","formWorkflows_messageOnSubmitIsHtmlToggleTextOff"]).then(function(labels){vm.messageOnSubmitIsHtmlToggleTextOn=labels[0];vm.messageOnSubmitIsHtmlToggleTextOff=labels[1]}));promises.push(fieldResource.getDataTypeForRichTextField().then(function(response){response.data&&(vm.messageOnSubmitHtmlEditor={alias:"messageOnSubmitHtmlEditor",label:"Html",view:"rte",editor:"Umbraco.TinyMCE",config:{editor:response.data.preValues[0].value},value:$scope.model.messageOnSubmitIsHtml?$scope.model.messageOnSubmit:null},vm.htmlAvailable=!0)}));$scope.$watch("vm.messageOnSubmitHtmlEditor",function(){typeof vm.messageOnSubmitHtmlEditor!="undefined"&&$scope.model.messageOnSubmitIsHtml&&($scope.model.messageOnSubmit=vm.messageOnSubmitHtmlEditor.value)},!0);$q.all(promises).then(function(){vm.loading=!1})}var vm=this;vm.loading=!0;vm.htmlAvailable=!1;vm.toggleMessageOnSubmitIsHtml=toggleMessageOnSubmitIsHtml;init()});angular.module("umbraco").controller("UmbracoForms.Overlays.WorkflowSettingsOverlayController",function($scope,workflowResource,localizationService,providerLocalizationHelper,formService){function localizeConditionSelectors(types,key,prefix){var keys,i;if(types){for(keys=[],prefix=prefix||"",i=0;i<types.length;i++)keys.push("formConditions_"+prefix+key+types[i].value);localizationService.localizeMany(keys).then(function(labels){for(var i=0;i<labels.length;i++)types[i].name=labels[i]})}}function prepareDataForEdit(){$scope.model.workflow.includeSensitiveData=$scope.model.workflow.includeSensitiveData==="True"||$scope.model.workflow.includeSensitiveData===!0?!0:!1;localizationService.localizeMany(providerLocalizationHelper.getLocalizationKeys("formProviderWorkflows",[$scope.model.workflow],$scope.model.workflow.workflowTypeName)).then(function(labels){providerLocalizationHelper.applyLocalizationLabels([$scope.model.workflow],labels,!0)})}var vm=this;vm.workflowTypes=[];vm.focusWorkflowName=!0;vm.enableConditionsToggleText="";localizationService.localizeMany(["formConditions_enableConditions"]).then(function(labels){vm.enableConditionsToggleText=labels[0]});vm.actionTypes=formService.getActionTypes();vm.logicTypes=formService.getLogicTypes();vm.operators=formService.getOperators();localizeConditionSelectors(vm.actionTypes,"actionType","workflow");localizeConditionSelectors(vm.logicTypes,"logicType");localizeConditionSelectors(vm.operators,"operator");$scope.model.workflow&&prepareDataForEdit();$scope.model.workflowType&&$scope.model.workflowType.id&&workflowResource.getScaffoldWorkflowType($scope.model.workflowType.id).then(function(response){$scope.model.workflow=response.data;prepareDataForEdit()});vm.toggleActive=function(){$scope.model.workflow.active=!$scope.model.workflow.active;$scope.workflowSettingsForm.$setDirty()};vm.toggleIncludeSensitiveData=function(){$scope.model.workflow.includeSensitiveData=!$scope.model.workflow.includeSensitiveData;$scope.workflowSettingsForm.$setDirty()};vm.toggleConditions=function(){$scope.model.workflow.condition.enabled=!$scope.model.workflow.condition.enabled};vm.conditionFieldSelected=function(selectedField,rule){formService.populateConditionRulePrevalues(selectedField,rule,$scope.model.fields)};vm.deleteConditionRule=function(rules,rule){formService.deleteConditionRule(rules,rule)};vm.addConditionRule=function(condition){formService.addEmptyConditionRule(condition);var lastIndex=condition.rules.length-1;condition.rules[lastIndex].operator=vm.operators[0].value};vm.close=function(){$scope.model.close($scope.workflowSettingsForm.$dirty)};vm.submit=function(){$scope.model.submit($scope.model)}});angular.module("umbraco").controller("UmbracoForms.Overlays.WorkflowsOverviewOverlayController",function($scope,workflowResource,notificationsService,editorService,overlayService,localizationService){function updateSortOrder(array){for(var arrayItem,sortOrder=0,i=0;i<array.length;i++)arrayItem=array[i],arrayItem.isDeleted===!1&&(arrayItem.sortOrder=sortOrder,sortOrder++)}var vm=this;vm.focusOverlay=!0;$scope.model.formWorkflows.onSubmit||($scope.model.formWorkflows.onSubmit=[]);$scope.model.formWorkflows.onApprove||($scope.model.formWorkflows.onApprove=[]);vm.workflowsSortableOptions={distance:10,tolerance:"pointer",connectWith:".umb-forms-workflows__sortable-wrapper",opacity:.7,scroll:!0,cursor:"move",zIndex:6e3,handle:".sortable-handle",items:".sortable",placeholder:"umb-forms-workflow__workflow-placeholder",start:function(e,ui){ui.placeholder.height(ui.item.height())},stop:function(){updateSortOrder($scope.model.formWorkflows.onSubmit);updateSortOrder($scope.model.formWorkflows.onApprove)}};vm.openWorkflowsTypesOverlay=function(workflowTypeArray){localizationService.localize("formWorkflows_chooseWorkflow").then(function(val){var workflowsTypesOverlay={view:"/App_Plugins/UmbracoForms/backoffice/Form/overlays/workflows/workflow-types.html",title:val,fields:$scope.model.fields,size:"medium",submit:function(model){workflowTypeArray.push(model.workflow);updateSortOrder(workflowTypeArray);editorService.close()},close:function(){editorService.close()}};editorService.open(workflowsTypesOverlay)})};vm.editWorkflow=function(workflow,collection,index){var preEditedWorkflow=JSON.parse(JSON.stringify(workflow)),workflowSettingsOverlay={view:"/App_Plugins/UmbracoForms/backoffice/Form/overlays/workflows/workflow-settings.html",title:workflow.name,workflow:workflow,fields:$scope.model.fields,size:"medium",submit:function(model){workflowResource.validateWorkflowSettings(model.workflow).then(function(response){response.data.length>0?angular.forEach(response.data,function(error){notificationsService.error("Workflow failed to save",error.Message)}):editorService.close()})},close:function(hasChanges){hasChanges?localizationService.localizeMany(["formWorkflows_closeConfirmationTitle","formWorkflows_closeConfirmationMessage","general_no","general_yes"]).then(function(labels){var overlay={view:"confirm",title:labels[0],content:labels[1],closeButtonLabel:labels[2],submitButtonLabel:labels[3],submitButtonStyle:"danger",close:function(){overlayService.close()},submit:function(){$scope.model.formWorkflows[collection][index]=preEditedWorkflow;overlayService.close();editorService.close()}};overlayService.open(overlay)}):editorService.close()}};editorService.open(workflowSettingsOverlay)};vm.removeWorkflow=function(workflow,event,workflowTypeArray){workflow.isDeleted=!0;updateSortOrder(workflowTypeArray);event.stopPropagation()};vm.editSubmitMessageWorkflow=function(){localizationService.localize("formWorkflows_messageOnSubmit").then(function(val){var submitMessageWorkflowOverlay={view:"/App_Plugins/UmbracoForms/backoffice/Form/overlays/workflows/submit-message-workflow-settings.html",title:val,messageOnSubmit:$scope.model.messageOnSubmit,messageOnSubmitIsHtml:$scope.model.messageOnSubmitIsHtml,goToPageOnSubmit:$scope.model.goToPageOnSubmit,size:"medium",submit:function(model){$scope.model.messageOnSubmit=model.messageOnSubmit;$scope.model.messageOnSubmitIsHtml=model.messageOnSubmitIsHtml;$scope.model.goToPageOnSubmit=model.goToPageOnSubmit;editorService.close()},close:function(){editorService.close()}};editorService.open(submitMessageWorkflowOverlay)})};vm.close=function(){$scope.model.close()};vm.submit=function(){$scope.model.submit($scope.model)}});angular.module("umbraco").controller("UmbracoForms.Overlays.WorkflowTypesOverlayController",function($scope,workflowResource,notificationsService,editorService,overlayService,localizationService,providerLocalizationHelper){function setDefaultWorkflowIcon(workflowTypes){for(var workflowType,i=0;i<workflowTypes.length;i++)workflowType=workflowTypes[i],workflowType.icon||(workflowType.icon="icon-mindmap")}var vm=this;vm.workflowTypes=[];vm.searchTerm="";workflowResource.getAllWorkflowTypesWithSettings().then(function(response){vm.workflowTypes=response.data;setDefaultWorkflowIcon(vm.workflowTypes);localizationService.localizeMany(providerLocalizationHelper.getLocalizationKeys("formProviderWorkflows",vm.workflowTypes)).then(function(labels){providerLocalizationHelper.applyLocalizationLabels(vm.workflowTypes,labels)})});vm.pickWorkflowType=function(selectedWorkflowType){var workflowSettingsOverlay={view:"/App_Plugins/UmbracoForms/backoffice/Form/overlays/workflows/workflow-settings.html",title:selectedWorkflowType.name,workflow:$scope.model.workflow,workflowType:selectedWorkflowType,fields:$scope.model.fields,size:"medium",submit:function(model){workflowResource.validateWorkflowSettings(model.workflow).then(function(response){response.data.length>0?angular.forEach(response.data,function(error){notificationsService.error("Workflow failed to save",error.Message)}):($scope.model.workflow=model.workflow,$scope.model.submit($scope.model),editorService.close())})},close:function(hasChanges){hasChanges?localizationService.localizeMany(["formWorkflows_closeConfirmationTitle","formWorkflows_closeConfirmationMessage","general_no","general_yes"]).then(function(labels){var overlay={view:"confirm",title:labels[0],content:labels[1],closeButtonLabel:labels[2],submitButtonLabel:labels[3],submitButtonStyle:"danger",close:function(){overlayService.close()},submit:function(){overlayService.close();editorService.close()}};overlayService.open(overlay)}):editorService.close()}};editorService.open(workflowSettingsOverlay)};vm.filterItems=function(){$scope.model.itemDetails=null};vm.showDetailsOverlay=function(workflowType){$scope.model.itemDetails={icon:workflowType.icon,title:workflowType.name,description:workflowType.description}};vm.hideDetailsOverlay=function(){$scope.model.itemDetails=null};vm.close=function(){$scope.model.close()}});angular.module("umbraco").controller("UmbracoForms.Editors.Form.FormDesignController",function(formResource,securityResource,localizationService,providerLocalizationHelper){var vm=this;vm.currentPage={};vm.security={};formResource.getPrevalueSources().then(function(resp){vm.prevaluesources=resp.data;formResource.getAllFieldTypesWithSettings().then(function(resp){vm.fieldtypes=resp.data;localizationService.localizeMany(providerLocalizationHelper.getLocalizationKeys("formProviderFieldTypes",vm.fieldtypes)).then(function(labels){providerLocalizationHelper.applyLocalizationLabels(vm.fieldtypes,labels);vm.ready=!0})})});securityResource.getForCurrentUser(!1).then(function(response){vm.security=response.data})}),function(){"use strict";function FormSettingsController($scope,localizationService,overlayService){function toggleDisplayDefaultFields(){!$scope.model.displayDefaultFields&&vm.selectedDisplayFields.length>0?localizationService.localizeMany(["formSettings_displayDefaultFields","formSettings_resetDisplayDefaultFieldsMessage","general_no","general_yes"]).then(function(labels){overlayService.open({view:"confirm",title:labels[0],content:labels[1],closeButtonLabel:labels[2],submitButtonLabel:labels[3],submitButtonStyle:"danger",close:function(){overlayService.close()},submit:function(){$scope.model.displayDefaultFields=!0;overlayService.close()}})}):$scope.model.displayDefaultFields=!$scope.model.displayDefaultFields}function getFieldCaption(alias,isSystem){for(var fields=isSystem?vm.systemFields:vm.formFields,i=0;i<fields.length;i++)if(fields[i].alias===alias)return fields[i].caption}function refreshSelectedDisplayFieldsInModel(){$scope.model.selectedDisplayFields=vm.selectedDisplayFields}function addDisplayField(){var alias=vm.displayFieldToAdd,isSystem;(vm.displayFieldToAdd=null,alias)&&(isSystem=alias.startsWith("_system_"),isSystem&&(alias=alias.trimStart("_system_")),hasDisplayField(alias,isSystem)||(vm.selectedDisplayFields.push({alias:alias,caption:getFieldCaption(alias,isSystem),isSystem:isSystem?1:0}),refreshSelectedDisplayFieldsInModel()))}function hasDisplayField(alias,isSystem){return _.find(vm.selectedDisplayFields,function(field){return field.alias===alias&&field.isSystem==isSystem})}function removeDisplayField(field){for(var i=0;i<vm.selectedDisplayFields.length;i++)if(vm.selectedDisplayFields[i].alias===field.alias&&vm.selectedDisplayFields[i].isSystem===field.isSystem)break;vm.selectedDisplayFields.splice(i,1);refreshSelectedDisplayFieldsInModel()}function getDefaultDeleteAfterDays(state){return previousValues[state]>0?previousValues[state]:365}function toggleRetain(state){var viewModelKey="showDaysToRetain"+state+"Records",modelKey;vm[viewModelKey]=!vm[viewModelKey];modelKey="daysToRetain"+state+"RecordsFor";vm[viewModelKey]?$scope.model[modelKey]===0&&($scope.model[modelKey]=getDefaultDeleteAfterDays(state)):(previousValues[state]=$scope.model[modelKey],$scope.model[modelKey]=0)}function initFieldSelection(){vm.toggleDisplayDefaultFields=toggleDisplayDefaultFields;vm.addDisplayField=addDisplayField;vm.hasDisplayField=hasDisplayField;vm.removeDisplayField=removeDisplayField;vm.refreshSelectedDisplayFieldsInModel=refreshSelectedDisplayFieldsInModel;vm.displayFieldToAdd=null;vm.selectedDisplayFields=$scope.model.selectedDisplayFields;var fixHelper=function(e,ui){ui.children().each(function(){$(this).width($(this).width())});var row=ui.clone();return row.css("background-color","lightgray"),row};vm.selectedDisplayFieldsSortableOptions={helper:fixHelper,handle:".handle",opacity:.5,axis:"y",containment:"parent",cursor:"move",items:"> tr",tolerance:"pointer",forcePlaceholderSize:!0,start:function(e,ui){ui.placeholder.height(ui.item.height())},update:function(){refreshSelectedDisplayFieldsInModel()}};vm.formFields=[];angular.forEach($scope.model.pages,function(page){angular.forEach(page.fieldSets,function(fieldSet){angular.forEach(fieldSet.containers,function(container){angular.forEach(container.fields,function(field){vm.formFields.push(field)})})})});vm.systemFields=[];localizationService.localizeMany(["formEntries_member","formEntries_state","formEntries_submittedOn","formEntries_updatedOn","formEdit_workflows"]).then(function(labels){vm.systemFields.push({alias:"member",caption:labels[0]});vm.systemFields.push({alias:"state",caption:labels[1]});vm.systemFields.push({alias:"created",caption:labels[2]});vm.systemFields.push({alias:"update",caption:labels[3]});vm.systemFields.push({alias:"workflowAuditSummary",caption:labels[4]})})}function initDataRetention(){vm.toggleRetain=toggleRetain;vm.scheduledRecordDeletionEnabled=Umbraco.Sys.ServerVariables.umbracoPlugins.forms.scheduledRecordDeletionEnabled;vm.showDaysToRetainSubmittedRecords=$scope.model.daysToRetainSubmittedRecordsFor>0;vm.showDaysToRetainApprovedRecords=$scope.model.daysToRetainApprovedRecordsFor>0}var vm=this,previousValues={submitted:0,approved:0};initFieldSelection();initDataRetention()}angular.module("umbraco").controller("UmbracoForms.Editors.Form.FormSettingsController",FormSettingsController)}();angular.module("umbraco").controller("UmbracoForms.Editors.FormSecurity.CreateController",function($location,navigationService,securityResource){var vm=this;vm.selectedUser=null;vm.users=[];vm.noUsersToChoose=!1;securityResource.getUsersWithoutSecurityRecords().then(function(response){vm.users=response.data;vm.noUsersToChoose=vm.users.length===0});vm.navigateToCreate=function(){$location.path("/users/FormSecurity/edit/user-"+vm.selectedUser.id);navigationService.hideNavigation()};vm.cancelCreate=function(){navigationService.hideNavigation()}});angular.module("umbraco").controller("UmbracoForms.Editors.FormSecurity.DeleteController",function($scope,securityResource,navigationService,notificationsService,treeService,localizationService,utilityService){var vm=this;vm.buttonState="init";vm.title="";localizationService.localize("formSecurity_deleteTitle",[$scope.currentNode.name]).then(function(val){vm.title=utilityService.hexHtmlToString(val)});vm.performDelete=function(id){vm.buttonState="busy";localizationService.localizeMany(["formSecurity_deleteSuccessMessage","formSecurity_deleteFailedMessage"]).then(function(labels){var userId=id.replace("user-","");securityResource.deleteByUserId(userId).then(function(){vm.buttonState="success";treeService.removeNode($scope.currentNode);navigationService.hideNavigation();notificationsService.success(labels[0])},function(err){vm.buttonState="error";notificationsService.error(labels[1],err.data.Message)})})};vm.cancelDelete=function(){navigationService.hideNavigation()}});angular.module("umbraco").controller("UmbracoForms.Editors.Security.EditController",function($scope,$routeParams,securityResource,notificationsService,navigationService,localizationService,editorService,usersResource,userGroupsResource){function stripFolderIdPrefix(id){return id.replace("folder-","")}var vm=this,prefixes,i,path,initializeSecurity,selectedFolders;for(vm.page={},vm.userGroupEditingSupported=Umbraco.Sys.ServerVariables.umbracoPlugins.forms.manageSecurityWithUserGroups,vm.security={},vm.loading=!0,prefixes=["group","user"],i=0;i<prefixes.length;i++)$routeParams.id.startsWith(prefixes[i]+"-")&&(vm.editing=prefixes[i],vm.id=$routeParams.id.replace(prefixes[i]+"-",""));path=[];path.push("-1");vm.userGroupEditingSupported&&path.push(vm.editing+"s");path.push(vm.editing+"-"+vm.id);navigationService.syncTree({tree:"formsecurity",path:path,forceReload:!0});initializeSecurity=function(data){vm.security=data;vm.loading=!1};vm.editing==="group"?securityResource.getByUserGroupId(vm.id).then(function(response){initializeSecurity(response.data)}):securityResource.getByUserId(vm.id,!0).then(function(response){initializeSecurity(response.data)});vm.userGroupEditingSupported?localizationService.localizeMany(["formSecurity_manageIndividualFormsLabel","formSecurity_groupPermissions","formSecurity_userPermissions","formSecurity_startFolders"]).then(function(labels){vm.page.name=labels[0];vm.editing==="group"?userGroupsResource.getUserGroup(vm.id).then(function(group){vm.page.name+=": "+labels[1]+": "+group.name}):usersResource.getUser(vm.id).then(function(user){vm.page.name+=": "+(vm.editing==="user"?labels[2]:labels[3])+": "+user.name})}):localizationService.localize("formSecurity_manageIndividualFormsLabel").then(function(val){vm.page.name=val;usersResource.getUser(vm.id).then(function(user){vm.page.name+=": "+user.name})});vm.getUserOrGroupSecurity=function(){return vm.editing==="group"?vm.security.userGroupSecurity:vm.security.userSecurity};vm.toggleManageForms=function(){vm.getUserOrGroupSecurity().manageForms=!vm.getUserOrGroupSecurity().manageForms};vm.toggleViewEntries=function(){vm.getUserOrGroupSecurity().viewEntries=!vm.getUserOrGroupSecurity().viewEntries;vm.getUserOrGroupSecurity().viewEntries||(vm.getUserOrGroupSecurity().editEntries=!1)};vm.toggleEditEntries=function(){vm.getUserOrGroupSecurity().editEntries=!vm.getUserOrGroupSecurity().editEntries};vm.toggleViewEntries=function(){vm.getUserOrGroupSecurity().viewEntries=!vm.getUserOrGroupSecurity().viewEntries;vm.getUserOrGroupSecurity().viewEntries||(vm.getUserOrGroupSecurity().editEntries=!1)};vm.toggleEditEntries=function(){vm.getUserOrGroupSecurity().editEntries=!vm.getUserOrGroupSecurity().editEntries};vm.toggleManageWorkflows=function(){vm.getUserOrGroupSecurity().manageWorkflows=!vm.getUserOrGroupSecurity().manageWorkflows};vm.toggleManageDataSources=function(){vm.getUserOrGroupSecurity().manageDataSources=!vm.getUserOrGroupSecurity().manageDataSources};vm.toggleManagePreValueSources=function(){vm.getUserOrGroupSecurity().managePreValueSources=!vm.getUserOrGroupSecurity().managePreValueSources};vm.toggleFormAccess=function(form){form.hasAccess=!form.hasAccess};selectedFolders=[];vm.openFolderPicker=function(){localizationService.localize("formSecurity_startFolders").then(function(val){var folderPicker={title:val,section:"forms",treeAlias:"Form",customTreeParams:"foldersOnly=1&ignoreStartFolders=1",multiPicker:!0,hideHeader:!0,select:function(node){node.selected=node.selected===!0?!1:!0;var folderId=stripFolderIdPrefix(node.id),folderName=node.name;node.selected?selectedFolders.push({id:folderId,name:folderName}):selectedFolders=selectedFolders.filter(function(item){return item.id!==folderId})},submit:function(){vm.security.startFolders=selectedFolders;editorService.close()},close:function(){editorService.close()}};selectedFolders=[];editorService.treePicker(folderPicker)})};vm.removeStartFolder=function(id){vm.security.startFolders=vm.security.startFolders.filter(function(item){return item.id!==id})};vm.save=function(){localizationService.localizeMany(["formSecurity_saveSuccessTitle","formSecurity_saveErrorTitle"]).then(function(labels){var handleSuccess=function(response){vm.security=response.data;notificationsService.success(labels[0],"");$scope.securityForm.$setPristine()},handleError=function(){notificationsService.error(labels[1],"")};vm.editing==="group"?(vm.security.userGroupSecurity.userGroupId=vm.id,securityResource.saveUserGroup(vm.security).then(function(response){handleSuccess(response)},function(){handleError()})):(vm.security.userSecurity.user=vm.id,securityResource.saveUser(vm.security).then(function(response){handleSuccess(response);vm.userGroupEditingSupported&&vm.editing==="user"&&navigationService.syncTree({tree:"formsecurity",path:["-1","users","user-"+vm.id],forceReload:!0})},function(){handleError()}))})}});angular.module("umbraco").controller("Umbraco.Forms.GridEditors.FormPickerController",function($scope,$timeout,editorService,macroResource,macroService,$routeParams,$sce){$scope.title="Click to insert form";$scope.macroAlias="renderUmbracoForm";$scope.setFormMacro=function(){var dialogData={richTextEditor:!0,macroData:$scope.control.value||{macroAlias:$scope.macroAlias}},macroPicker={dialogData:dialogData,submit:function(model){var macroObject=macroService.collectValueData(model.selectedMacro,model.macroParams,dialogData.renderingEngine);$scope.control.value={macroAlias:macroObject.macroAlias,macroParamsDictionary:macroObject.macroParamsDictionary};$scope.setPreview($scope.control.value);editorService.close()},close:function(){editorService.close()}};editorService.macroPicker(macroPicker)};$scope.setPreview=function(macro){var contentId=$routeParams.id;macroResource.getMacroResultAsHtmlForEditor(macro.macroAlias,contentId,macro.macroParamsDictionary).then(function(htmlResult){$scope.title=macro.macroAlias;htmlResult.trim().length>0&&htmlResult.indexOf("Macro:")<0&&(htmlResult=htmlResult.replace("<form","<div").replace("<\/form>","<\/div>"),$scope.preview=$sce.trustAsHtml(htmlResult))})};$timeout(function(){$scope.control.$initializing?$scope.setFormMacro():$scope.control.value&&$scope.setPreview($scope.control.value)},200)});angular.module("umbraco").controller("UmbracoForms.Editors.PreValueSource.DeleteController",function($scope,preValueSourceResource,navigationService,treeService,localizationService,notificationsService){$scope.delete=function(id){localizationService.localizeMany(["formPrevalueSources_deleteSuccessMessage","formPrevalueSources_deleteFailedMessage"]).then(function(labels){preValueSourceResource.deleteByGuid(id).then(function(){treeService.removeNode($scope.currentNode);navigationService.hideNavigation();notificationsService.success(labels[0])},function(err){notificationsService.error(labels[1],err.data.Message)})})};$scope.cancelDelete=function(){navigationService.hideNavigation()}});angular.module("umbraco").controller("UmbracoForms.Editors.PreValueSource.EditController",function($scope,$routeParams,preValueSourceResource,editorState,notificationsService,navigationService,formHelper,securityResource,localizationService,providerLocalizationHelper){function getPrevalues(){preValueSourceResource.getPreValues($scope.preValueSource).then(function(response){$scope.prevalues=response.data})}function setTypeAndSettings(){if($scope.preValueSource.$type=_.where($scope.types,{id:$scope.preValueSource.fieldPreValueSourceTypeId})[0],angular.forEach($scope.preValueSource.settings,function(){for(var key in $scope.preValueSource.settings)$scope.preValueSource.settings.hasOwnProperty(key)&&_.where($scope.preValueSource.$type.settings,{alias:key}).length>0&&(_.where($scope.preValueSource.$type.settings,{alias:key})[0].value=$scope.preValueSource.settings[key])}),$scope.cachePrevaluesFor={timeValue:1,timeUnit:"seconds"},$scope.preValueSource.cachePrevaluesFor)if($scope.preValueSource.cachePrevaluesFor[0]==="-")$scope.cachePrevaluesFor.option="noExpiry";else if($scope.preValueSource.cachePrevaluesFor==="00:00:00")$scope.cachePrevaluesFor.option="none";else{$scope.cachePrevaluesFor.option="time";var timeSpanParts=$scope.preValueSource.cachePrevaluesFor.split(":");parseInt(timeSpanParts[0])>0?($scope.cachePrevaluesFor.timeValue=parseInt(timeSpanParts[0]),$scope.cachePrevaluesFor.timeUnit="hours"):parseInt(timeSpanParts[1])>0?($scope.cachePrevaluesFor.timeValue=parseInt(timeSpanParts[1]),$scope.cachePrevaluesFor.timeUnit="minutes"):$scope.cachePrevaluesFor.timeValue=parseInt(timeSpanParts[2])}else $scope.cachePrevaluesFor.option="noExpiry"}securityResource.getForCurrentUser(!1).then(function(response){if($scope.security=response.data,!$scope.security.userSecurity.managePreValueSources){localizationService.localizeMany(["formPermissions_accessDeniedTitle","formPrevalueSources_accessDeniedMessage"]).then(function(labels){notificationsService.error(labels[0],labels[1])});navigationService.syncTree({tree:"prevaluesource",path:["-1"],forceReload:!0,activate:!1}).then(function(response){navigationService.reloadNode(response.node)});return}});$routeParams.create?preValueSourceResource.getScaffold().then(function(response){$scope.loaded=!0;$scope.preValueSource=response.data;preValueSourceResource.getAllPreValueSourceTypesWithSettings().then(function(resp){$scope.types=resp.data;localizationService.localizeMany(providerLocalizationHelper.getLocalizationKeys("formProviderPrevalueSources",$scope.types)).then(function(labels){providerLocalizationHelper.applyLocalizationLabels($scope.types,labels)})});editorState.set($scope.form)}):preValueSourceResource.getByGuid($routeParams.id).then(function(response){$scope.preValueSource=response.data;preValueSourceResource.getAllPreValueSourceTypesWithSettings().then(function(resp){$scope.types=resp.data;localizationService.localizeMany(providerLocalizationHelper.getLocalizationKeys("formProviderPrevalueSources",$scope.types)).then(function(labels){providerLocalizationHelper.applyLocalizationLabels($scope.types,labels);setTypeAndSettings();getPrevalues();$scope.loaded=!0})});navigationService.syncTree({tree:"prevaluesource",path:[String($routeParams.id)],forceReload:!1});editorState.set($scope.preValueSource)});$scope.setType=function(){$scope.prevalues=null;setTypeAndSettings()};$scope.save=function(){if(formHelper.submitForm({scope:$scope})){$scope.preValueSource.settings={};$scope.preValueSource.$type&&angular.forEach($scope.preValueSource.$type.settings,function(setting){var key=setting.alias,value=setting.value;$scope.preValueSource.settings[key]=value});var getTimespan=function(value,unit){return new Date(value*1e3*(unit==="minutes"||unit==="hours"?60:1)*(unit==="hours"?60:1)).toISOString().slice(11,19)};switch($scope.cachePrevaluesFor.option){case"none":$scope.preValueSource.cachePrevaluesFor="00:00:00.0000000";break;case"time":$scope.preValueSource.cachePrevaluesFor=getTimespan($scope.cachePrevaluesFor.timeValue,$scope.cachePrevaluesFor.timeUnit);break;case"noExpiry":$scope.preValueSource.cachePrevaluesFor="-00:00:00.0010000"}localizationService.localizeMany(["formPrevalueSources_saveSuccessTitle","formPrevalueSources_saveErrorTitle","formMessages_saveErrorMessage"]).then(function(labels){preValueSourceResource.validateSettings($scope.preValueSource).then(function(response){$scope.errors=response.data;$scope.errors.length>0?angular.forEach($scope.errors,function(error){notificationsService.error(labels[1],error.Message)}):preValueSourceResource.save($scope.preValueSource).then(function(response){$scope.preValueSource=response.data;editorState.set($scope.preValueSource);setTypeAndSettings();getPrevalues();$scope.preValueSourceForm.$dirty=!1;navigationService.syncTree({tree:"prevaluesource",path:[String($scope.preValueSource.id)],forceReload:!0});notificationsService.success(labels[0],"")},function(){notificationsService.error(labels[1],"")})},function(){notificationsService.error(labels[1],labels[2])})})}}});angular.module("umbraco").controller("UmbracoForms.FormPickerController",function($scope,$location,formPickerResource,securityResource,editorService){function setSelectedForm(form){if(vm.selectedForm=form,vm.selectedForm.icon="icon-umb-contour",userSecurity&&formSecurity){var formSecurityForForm=formSecurity.filter(function(fs){return fs.form===vm.selectedForm.id});formSecurityForForm.length>0&&(vm.selectedForm.canEditForm=userSecurity.manageForms&&formSecurityForForm[0].hasAccess,vm.selectedForm.canViewEntries=userSecurity.viewEntries&&formSecurityForForm[0].hasAccess)}}var vm=this,allowedForms=null,userSecurity=null,formSecurity=null;vm.loading=!0;vm.selectedForm=null;vm.error=null;$scope.model.config&&$scope.model.config.allowedForms&&(allowedForms=$scope.model.config.allowedForms);securityResource.getForCurrentUser(!1).then(function(response){formSecurity=response.data.formsSecurity;userSecurity=response.data.userSecurity;$scope.model.value&&formPickerResource.getPickedForm($scope.model.value).then(function(response){setSelectedForm(response)},function(){var currentValue=angular.copy($scope.model.value);vm.error="The saved/picked form with id '"+currentValue+"' no longer exists. Pick another form below or clear out the old saved form"})});vm.openFormPicker=function(){var editor={view:"../App_Plugins/UmbracoForms/backoffice/Form/overlays/formpicker/formpicker.html",size:"small",multiPicker:!1,allowedForms:allowedForms,submit:function(model){model.selectedForms&&model.selectedForms.length>0&&(setSelectedForm(model.selectedForms[0]),$scope.model.value=model.selectedForms[0].id);editorService.close()},close:function(){editorService.close()}};editorService.open(editor)};vm.remove=function(){vm.selectedForm=null;$scope.model.value=null};vm.openFormDesigner=function(){$location.url("forms/Form/edit/"+vm.selectedForm.id)};vm.openFormEntries=function(){$location.url("forms/Form/entries/"+vm.selectedForm.id)}});angular.module("umbraco").controller("UmbracoForms.FormPickerPrevaluesController",function($scope,formPickerResource,editorService){function selectForms(selectedForms){angular.forEach(selectedForms,function(selectedForm){$scope.model.value.indexOf(selectedForm.id)===-1&&(vm.forms.push(selectedForm),$scope.model.value.push(selectedForm.id))})}var vm=this;$scope.model.value||($scope.model.value=[]);vm.forms||(vm.forms=[]);$scope.model.value&&$scope.model.value.length>0&&formPickerResource.getPickedForms($scope.model.value).then(function(response){vm.forms=response});vm.openFormPicker=function(){var editor={view:"../App_Plugins/UmbracoForms/backoffice/Form/overlays/formpicker/formpicker.html",size:"small",multiPicker:!0,submit:function(model){model.selectedForms&&model.selectedForms.length>0&&selectForms(model.selectedForms);editorService.close()},close:function(){editorService.close()}};editorService.open(editor)};vm.remove=function(selectedForm){angular.forEach($scope.model.value,function(formId,index){formId===selectedForm.id&&$scope.model.value.splice(index,1)});angular.forEach(vm.forms,function(form,index){form.id===selectedForm.id&&vm.forms.splice(index,1)})}});angular.module("umbraco").controller("UmbracoForms.ThemePickerController",function($scope,editorService){var vm=this;vm.loading=!0;vm.selectedTheme=null;vm.error=null;$scope.model.value&&(vm.selectedTheme={name:$scope.model.value,icon:"icon-brush"});vm.openThemePicker=function(){var editor={view:"../App_Plugins/UmbracoForms/backoffice/Form/overlays/themepicker/themepicker.html",size:"small",multiPicker:!1,submit:function(model){model.selectedThemes&&model.selectedThemes.length>0&&(vm.selectedTheme=model.selectedThemes[0],vm.selectedTheme.icon="icon-brush",$scope.model.value=model.selectedThemes[0].name);editorService.close()},close:function(){editorService.close()}};editorService.open(editor)};vm.remove=function(){vm.selectedTheme=null;$scope.model.value=null}});angular.module("umbraco.resources").factory("dataSourceResource",function($http){var apiRoot="backoffice/UmbracoForms/DataSource/";return{getScaffold:function(){return $http.get(apiRoot+"GetScaffold")},getByGuid:function(id){return $http.get(apiRoot+"GetByGuid?guid="+id)},deleteByGuid:function(id){return $http.delete(apiRoot+"DeleteByGuid?guid="+id)},save:function(preValueSource){return $http.post(apiRoot+"PostSave",preValueSource)},validateSettings:function(preValueSource){return $http.post(apiRoot+"ValidateSettings",preValueSource)},getAllDataSourceTypesWithSettings:function(){return $http.get(apiRoot+"GetAllDataSourceTypesWithSettings")}}});angular.module("umbraco.resources").factory("dataSourceWizardResource",function($http){var apiRoot="backoffice/UmbracoForms/DataSourceWizard/";return{getScaffold:function(id){return $http.get(apiRoot+"GetScaffold?guid="+id)},getAllFieldTypes:function(){return $http.get(apiRoot+"GetAllFieldTypes")},createForm:function(wizard){return $http.post(apiRoot+"CreateForm",wizard)}}});angular.module("umbraco.resources").factory("exportResource",function($http){var apiRoot="backoffice/UmbracoForms/Export/";return{getExportTypes:function(formId){return $http.get(apiRoot+"GetExportTypes?formId="+formId)},generateExport:function(config){return $http.post(apiRoot+"PostGenerateExport",config)},getExportUrl:function(formId,fileName){return apiRoot+"GetExport?formId="+formId+"&fileName="+fileName},getExport:function(token){return $http.get(apiRoot+"GetExport?token="+token)}}});angular.module("umbraco.resources").factory("fieldResource",function($http){var apiRoot="backoffice/UmbracoForms/Field/";return{validateSettings:function(field){return $http.post(apiRoot+"ValidateSettings",field)},getDataTypeForRichTextField:function(){return $http.get(apiRoot+"GetDataTypeForRichTextField")},getValidationPatterns:function(){return $http.get(apiRoot+"GetValidationPatterns")}}});angular.module("umbraco.resources").factory("formResource",function($http,umbRequestHelper,localizationService,notificationsService){var apiRoot="backoffice/UmbracoForms/Form/";return{getScaffold:function(template){return $http.get(apiRoot+"GetScaffold?template="+template)},getScaffoldWithWorkflows:function(template){return $http.get(apiRoot+"GetScaffoldWithWorkflows?template="+template)},getAllTemplates:function(){return $http.get(apiRoot+"GetFormTemplates")},getOverView:function(){return $http.get(apiRoot+"GetOverView")},getByGuid:function(id){return $http.get(apiRoot+"GetByGuid?guid="+id)},getWithWorkflowsByGuid:function(id){return $http.get(apiRoot+"GetWithWorkflowsByGuid?guid="+id)},deleteByGuid:function(id){return $http.delete(apiRoot+"DeleteByGuid?guid="+id)},save:function(form){return $http.post(apiRoot+"PostSave",form)},saveWithWorkflows:function(formWithWorkflows){return $http.post(apiRoot+"SaveForm",formWithWorkflows)},getAllFieldTypes:function(){return $http.get(apiRoot+"GetAllFieldTypes")},getAllFieldTypesWithSettings:function(){return $http.get(apiRoot+"GetAllFieldTypesWithSettings")},getPrevalueSources:function(){return $http.get(apiRoot+"GetPrevalueSources")},copy:function(id,newFormName,copyWorkflows,copyToFolderId){return $http.post(apiRoot+"CopyForm",{guid:id,newName:newFormName,copyWorkflows:copyWorkflows,copyToFolderId:copyToFolderId})},createFolder:function(parentId,name){return $http.post(apiRoot+"CreateFolder",{parentId:parentId,name:name})},renameFolder:function(id,name){return $http.post(apiRoot+"RenameFolder",{id:id,name:name})},moveFolder:function(parentId,id){return $http.post(apiRoot+"MoveFolder",{parentId:parentId,id:id})},moveForm:function(parentId,id){return $http.post(apiRoot+"MoveForm",{parentId:parentId,id:id})},isFolderEmpty:function(id){return $http.get(apiRoot+"IsFolderEmpty?guid="+id)},deleteFolderByGuid:function(id){return $http.delete(apiRoot+"DeleteFolderByGuid?guid="+id)},"export":function(id){if(!id)throw"id cannot be null";var url=apiRoot+"ExportForm?guid="+id;return umbRequestHelper.downloadFile(url).then(function(){localizationService.localize("formExport_formExportedSuccess").then(function(value){notificationsService.success(value)})},function(){localizationService.localize("formExport_formExportedError").then(function(value){notificationsService.error(value)})})},"import":function(file,folderId){if(!file)throw"file cannot be null";return $http.post(apiRoot+"ImportForm",{file:file,folderId:folderId})}}});angular.module("umbraco.resources").factory("formPickerResource",function($http,umbRequestHelper){var apiRoot="backoffice/UmbracoForms/FormPicker/";return{getFormsForPicker:function(formGuids){return umbRequestHelper.resourcePromise($http.post(apiRoot+"GetFormsForPicker",formGuids),"Failed to retrieve Forms to pick")},getPickedForm:function(id){return umbRequestHelper.resourcePromise($http.get(apiRoot+"GetPickedForm?formGuid="+id),"The picked/saved form with id '"+id+"' does not exist")},getPickedForms:function(formGuids){return umbRequestHelper.resourcePromise($http.post(apiRoot+"GetPickedForms",formGuids),"The picked/saved form with id '"+formGuids+"' does not exist")}}});angular.module("umbraco.resources").factory("licensingResource",function($http){var apiRoot="backoffice/UmbracoForms/Licensing/";return{getLicenseStatus:function(){return $http.get(apiRoot+"GetLicenseStatus")},getAvailableLicenses:function(config){return $http.post(apiRoot+"PostRetrieveAvailableLicenses",config)},configureLicense:function(config){return $http.post(apiRoot+"PostConfigureLicense",config)}}});angular.module("umbraco.resources").factory("pickerResource",function($http){var apiRoot="backoffice/UmbracoForms/Picker/";return{getAllConnectionStrings:function(){return $http.get(apiRoot+"GetAllConnectionStrings")},getAllDataTypes:function(){return $http.get(apiRoot+"GetAllDataTypes")},getAllDocumentTypes:function(){return $http.get(apiRoot+"GetAllDocumentTypes")},getAllMediaTypes:function(){return $http.get(apiRoot+"GetAllMediaTypes")},getAllFields:function(formGuid){return $http.get(apiRoot+"GetAllFields?formGuid="+formGuid)},getAllProperties:function(doctypeAlias){return $http.get(apiRoot+"GetAllProperties?doctypeAlias="+doctypeAlias)},updateMappedProperties:function(doctypeAlias,currentSavedProperties){var dataToPost={doctypeAlias:doctypeAlias,currentProperties:currentSavedProperties};return $http.post(apiRoot+"PostUpdateMappedProperties",dataToPost)},getVirtualPathForEmailTemplate:function(encodedPath){return $http.get(apiRoot+"GetVirtualPathForEmailTemplate?encodedPath="+encodedPath)}}});angular.module("umbraco.resources").factory("preValueSourceResource",function($http){var apiRoot="backoffice/UmbracoForms/PreValueSource/";return{getScaffold:function(){return $http.get(apiRoot+"GetScaffold")},getByGuid:function(id){return $http.get(apiRoot+"GetByGuid?guid="+id)},deleteByGuid:function(id){return $http.delete(apiRoot+"DeleteByGuid?guid="+id)},save:function(preValueSource){return $http.post(apiRoot+"PostSave",preValueSource)},validateSettings:function(preValueSource){return $http.post(apiRoot+"ValidateSettings",preValueSource)},getPreValues:function(preValueSource){return $http.post(apiRoot+"GetPreValues",preValueSource)},getPreValuesByGuid:function(preValueSourceId){return $http.get(apiRoot+"GetPreValuesByGuid?preValueSourceId="+preValueSourceId)},getAllPreValueSourceTypesWithSettings:function(){return $http.get(apiRoot+"GetAllPreValueSourceTypesWithSettings")}}});angular.module("umbraco.resources").factory("recordResource",function($http){var apiRoot="backoffice/UmbracoForms/Record/";return{getRecords:function(filter){return $http.post(apiRoot+"PostRetrieveRecords",filter)},getRecordsCount:function(filter){return $http.post(apiRoot+"PostRetrieveRecordsCount",filter)},getRecordSetActions:function(){return $http.get(apiRoot+"GetRecordSetActions")},executeRecordSetAction:function(model){return $http.post(apiRoot+"PostExecuteRecordSetAction",model)},updateRecord:function(model){return $http.post(apiRoot+"PostUpdateRecord",model)},getAuditTrail:function(recordId){return $http.get(apiRoot+"GetAuditTrail?recordId="+recordId)},getWorkflowAuditTrail:function(recordId){return $http.get(apiRoot+"GetWorkflowAuditTrail?recordId="+recordId)},retryWorkflow:function(recordId,formId,workflowKey){return $http.post(apiRoot+"PostRetryWorkflow",{recordId:recordId,formId:formId,workflowKey:workflowKey})}}});angular.module("umbraco.resources").factory("securityResource",function($http){var apiRoot="backoffice/UmbracoForms/FormSecurity/",apiRootForCurrentUser="backoffice/UmbracoForms/CurrentUserFormSecurity/";return{getForCurrentUser:function(includeFormFieldDetails){return $http.get(apiRootForCurrentUser+"GetForCurrentUser?includeFormFieldDetails="+(includeFormFieldDetails!==!1))},getByUserId:function(userId,explicitOnly){return $http.get(apiRoot+"GetByUserId?userId="+userId+"&explicitOnly="+explicitOnly)},getByUserGroupId:function(groupId){return $http.get(apiRoot+"GetByUserGroupId?groupId="+groupId)},saveUser:function(userSecurity){return $http.post(apiRoot+"PostSaveForUser",userSecurity)},saveUserGroup:function(userGroupSecurity){return $http.post(apiRoot+"PostSaveForGroup",userGroupSecurity)},getUsersWithoutSecurityRecords:function(){return $http.get(apiRoot+"GetUsersWithoutSecurityRecords")},deleteByUserId:function(userId){return $http.delete(apiRoot+"DeleteByUserId?userId="+userId)}}});angular.module("umbraco.resources").factory("themePickerResource",function($http,umbRequestHelper){var apiRoot="backoffice/UmbracoForms/ThemePicker/";return{getThemes:function(){return umbRequestHelper.resourcePromise($http.get(apiRoot+"GetThemes"),"Failed to retrieve Form Themes to pick")}}});angular.module("umbraco.resources").factory("updatesResource",function($http){var apiRoot="backoffice/UmbracoForms/Updates/";return{getUpdateStatus:function(){return $http.get(apiRoot+"GetUpdateStatus")},installLatest:function(version){return $http.get(apiRoot+"InstallLatest?version="+version)},getVersion:function(){return $http.get(apiRoot+"GetVersion")},getSavePlainTextPasswordsConfiguration:function(){return $http.get(apiRoot+"GetSavePlainTextPasswordsConfiguration")}}});angular.module("umbraco.resources").factory("workflowResource",function($http){var apiRoot="backoffice/UmbracoForms/Workflow/";return{validateSettings:function(preValueSource){return $http.post(apiRoot+"ValidateSettings",preValueSource)},getAllWorkflowTypesWithSettings:function(){return $http.get(apiRoot+"GetAllWorkflowTypesWithSettings")},getAllWorkflows:function(formGuid){return $http.get(apiRoot+"GetAllWorkflows?formGuid="+formGuid)},getScaffoldWorkflowType:function(workflowTypeId){return $http.get(apiRoot+"GetScaffoldWorkflowType?workflowTypeId="+workflowTypeId)},validateWorkflowSettings:function(workflowViewModel){return $http.post(apiRoot+"ValidateWorkflowSettings",workflowViewModel)}}});angular.module("umbraco.directives").directive("umbFormsAutoFocus",function($timeout){return function(scope,element,attr){function update(){element.val().indexOf(" field")>=0&&element.focus()}$timeout(function(){update()});scope.$watch(attr.umbFormsFocusOn,function(_focusVal){$timeout(function(){_focusVal&&(element.focus(),element.select(),update())})})}});angular.module("umbraco.directives").directive("umbFormsAutoSize",function($timeout){return function(scope,element){function update(force){force===!0&&element.height(0);domEl.scrollHeight!==domEl.clientHeight&&element.height(domEl.scrollHeight)}var domEl=element[0];element.bind("keyup keydown keypress change",update);element.bind("blur",function(){update(!0)});$timeout(function(){update()})}});angular.module("umbraco.directives").directive("umbFormsContentPicker",function(entityResource,iconHelper,editorService,$routeParams){return{restrict:"E",replace:!0,templateUrl:"/App_Plugins/UmbracoForms/Directives/umb-forms-content-picker.html",require:"ngModel",link:function(scope,element,attr,ctrl){function updateModel(id){ctrl.$setViewValue(id)}function populatePathDescription(item){entityResource.getUrl(item.id,"Document",$routeParams.mculture).then(function(url){item.pathDescription=url})}function populate(item){scope.clear();item.icon=iconHelper.convertFromLegacyIcon(item.icon);scope.node=item;scope.id=item.id;updateModel(item.id);populatePathDescription(item)}ctrl.$render=function(){var val=parseInt(ctrl.$viewValue);!isNaN(val)&&angular.isNumber(val)&&val>0&&entityResource.getById(val,"Document").then(function(item){item.icon=iconHelper.convertFromLegacyIcon(item.icon);scope.node=item;populatePathDescription(item)})};scope.openContentPicker=function(){editorService.contentPicker({submit:function(model){populate(model.selection[0]);editorService.close()},close:function(){editorService.close()}})};scope.clear=function(){scope.id=undefined;scope.node=undefined;updateModel(0)}}}});angular.module("umbraco.directives").directive("umbFormsDateRangePicker",function(assetsService){return{restrict:"A",scope:{userLocale:"@",onChange:"="},template:'<div class="umb-forms-date-range-picker daterange daterange--double"><\/div>',link:function(scope,element){assetsService.load(["~/App_Plugins/UmbracoForms/Assets/moment/min/moment-with-locales.min.js","~/App_Plugins/UmbracoForms/Assets/BaremetricsCalendar/public/js/Calendar.min.js"]).then(function(){new Calendar({element:element.firstChild,earliest_date:"2000-01-01",latest_date:moment(),start_date:moment().subtract(29,"days"),end_date:moment(),same_day_range:!0,callback:function(){var dateFilter={startDate:moment(this.start_date).format("YYYY-MM-DD"),endDate:moment(this.end_date).format("YYYY-MM-DD")};if(scope.onChange)scope.onChange(dateFilter)}})});assetsService.loadCss("/App_Plugins/UmbracoForms/Assets/BaremetricsCalendar/public/css/application.css")}}});angular.module("umbraco.directives").directive("ufDelayedMouseleave",function($timeout,$parse){return{restrict:"A",link:function(scope,element,attrs){var active=!1,fn=$parse(attrs.ufDelayedMouseleave);element.on("mouseleave",function(event){var callback=function(){fn(scope,{$event:event})};active=!1;$timeout(function(){active===!1&&scope.$apply(callback)},650)});element.on("mouseenter",function(){active=!0})}}});angular.module("umbraco.directives").directive("umbFormsDesignerNew",function(formService,fieldResource,workflowResource,notificationsService,editorService,overlayService,localizationService){return{scope:{form:"=",fieldtypes:"=",prevaluesources:"=",security:"="},transclude:!0,restrict:"E",replace:!0,templateUrl:"/App_Plugins/UmbracoForms/Directives/umb-forms-designer-new.html",link:function(scope){function populateFields(){scope.fields=[];angular.forEach(scope.form.pages,function(page){angular.forEach(page.fieldSets,function(fieldset){angular.forEach(fieldset.containers,function(container){angular.forEach(container.fields,function(field){scope.fields.push(field)})})})})}function getExistingFieldAliases(){var aliases=[];return angular.forEach(scope.form.pages,function(page){angular.forEach(page.fieldSets,function(fieldset){angular.forEach(fieldset.containers,function(container){angular.forEach(container.fields,function(field){aliases.push(field.alias)})})})}),aliases}function addOrUpdateField(model,field){var i;for(field.settings={},i=0;i<model.field.$fieldType.settings.length;i++){var setting=model.field.$fieldType.settings[i],key=setting.alias,value=setting.value||"";field.settings[key]=value}fieldResource.validateSettings(field).then(function(response){response.data.length>0?localizationService.localize("formEdit_saveFieldFailedTitle").then(function(errorTitle){angular.forEach(response.data,function(error){notificationsService.error(errorTitle,error.Message)})}):editorService.close()})}var operatorKeys,i;for(scope.sortingMode=!1,scope.sortingButtonKey="general_reorder",scope.state="",scope.ruleOperators=formService.getOperators(),operatorKeys=[],i=0;i<scope.ruleOperators.length;i++)operatorKeys.push("formConditions_operator"+scope.ruleOperators[i].value);localizationService.localizeMany(operatorKeys).then(function(labels){for(var i=0;i<scope.ruleOperators.length;i++)scope.ruleOperators[i].name=labels[i]});scope.setActive=function(fieldSet){angular.forEach(scope.form.pages,function(page){angular.forEach(page.fieldSets,function(fieldset){fieldset.state==="active"&&(fieldset.state="InActive")})});fieldSet.state="active"};scope.sortablePages={distance:10,tolerance:"pointer",opacity:.7,scroll:!0,cursor:"move",placeholder:"umb-forms__page-placeholder",zIndex:6e3,handle:".sortable-handle",items:".sortable",start:function(e,ui){ui.placeholder.height(ui.item.height())}};scope.sortableFieldsets={distance:10,tolerance:"pointer",connectWith:".umb-forms__fieldsets",opacity:.7,scroll:!0,cursor:"move",placeholder:"umb-forms__fieldset-placeholder",zIndex:6e3,handle:".sortable-handle",items:".sortable",start:function(e,ui){ui.placeholder.height(ui.item.height())},over:function(e){scope.$apply(function(){$(e.target).scope().page.dropOnEmpty=!0})},out:function(e){scope.$apply(function(){$(e.target).scope().page.dropOnEmpty=!1})}};scope.sortableFields={distance:10,tolerance:"pointer",connectWith:".umb-forms__fields",opacity:.7,scroll:!0,cursor:"move",placeholder:"umb-forms__field-placeholder",zIndex:6e3,handle:".sortable-handle",items:".sortable",start:function(e,ui){ui.placeholder.height(ui.item.height())},over:function(e){scope.$apply(function(){$(e.target).scope().container.dropOnEmpty=!0})},out:function(e){scope.$apply(function(){$(e.target).scope().container.dropOnEmpty=!1})}};scope.toggleSortingMode=function(){scope.sortingMode=!scope.sortingMode;scope.sortingButtonKey=scope.sortingMode?"general_reorderDone":"general_reorder"};scope.initForm=function(form,fieldtypes){formService.initForm(form,fieldtypes)};scope.toggleCopyPrompt=function(object){object.copyPrompt=!object.copyPrompt};scope.hideCopyPrompt=function(object){object.copyPrompt=!1};scope.toggleDeletePrompt=function(object){object.deletePrompt=!object.deletePrompt};scope.hideDeletePrompt=function(object){object.deletePrompt=!1};scope.addPage=function(form){formService.addPage(form)};scope.removePage=function(pages,index){pages.splice(index,1)};scope.formHasFields=function(){var hasFields=!1;return angular.forEach(scope.form.pages,function(page){angular.forEach(page.fieldSets,function(fieldset){angular.forEach(fieldset.containers,function(container){container.fields.length>0&&(hasFields=!0)})})}),hasFields};scope.pageHasFields=function(page){var hasFields=!1;return angular.forEach(page.fieldSets,function(fieldset){angular.forEach(fieldset.containers,function(container){container.fields.length>0&&(hasFields=!0)})}),hasFields};scope.editPage=function(page){populateFields();localizationService.localize("formEdit_editPage").then(function(val){editorService.open({view:"/App_Plugins/UmbracoForms/backoffice/Form/overlays/pagesettings/page-settings.html",title:val,page:page,fields:scope.fields,size:"medium"})})};scope.addFieldset=function(page){var _index=page.fieldSets.length;formService.addFieldset(page,_index)};scope.copyFieldset=function(page,fieldset){fieldset.copyPrompt=!1;formService.copyFieldset(page,fieldset,getExistingFieldAliases())};scope.removeFieldset=function(page,fieldset){formService.deleteFieldset(page,fieldset)};scope.editFieldset=function(fieldset){populateFields();localizationService.localize("formEdit_editGroup").then(function(val){editorService.open({view:"/App_Plugins/UmbracoForms/backoffice/Form/overlays/fieldsetsettings/fieldset-settings.html",title:val,fieldset:fieldset,fields:scope.fields,size:"medium"})})};scope.addField=function(fieldset,container){populateFields();var emptyField=formService.addEmptyField(container);localizationService.localize("formEdit_addQuestion").then(function(val){editorService.open({view:"/App_Plugins/UmbracoForms/backoffice/Form/overlays/fieldsettings/field-settings.html",title:val,field:emptyField,fields:scope.fields,size:"medium",prevalueSources:scope.prevaluesources,submit:function(model){addOrUpdateField(model,emptyField)},close:function(){formService.deleteField(fieldset,container,emptyField);editorService.close()}})})};scope.openFieldSettings=function(field){populateFields();scope.setFieldType(field);localizationService.localize("formEdit_editQuestion").then(function(val){editorService.open({view:"/App_Plugins/UmbracoForms/backoffice/Form/overlays/fieldsettings/field-settings.html",title:val,field:field,fields:scope.fields,size:"medium",prevalueSources:scope.prevaluesources,submit:function(model){addOrUpdateField(model,field)},close:function(){editorService.close()}})})};scope.removeField=function(fieldset,container,field){formService.deleteField(fieldset,container,field)};scope.copyField=function(container,field){field.copyPrompt=!1;formService.copyField(container,field,getExistingFieldAliases())};scope.setFieldType=function(field){angular.forEach(field.settings,function(){for(var key in field.settings)field.settings.hasOwnProperty(key)&&_.where(field.$fieldType.settings,{alias:key}).length>0&&(_.where(field.$fieldType.settings,{alias:key})[0].value=field.settings[key])})};scope.getFieldNameFromGuid=function(selectedFieldId){var i,field;for(populateFields(),i=0;i<scope.fields.length;i++)if(field=scope.fields[i],field.id===selectedFieldId)return field.caption};scope.getRuleOperatorName=function(operator){for(var i=0;i<scope.ruleOperators.length;i++)if(scope.ruleOperators[i].value===operator)return scope.ruleOperators[i].name;return operator};scope.editWorkflows=function(){if(scope.security&&scope.security.userSecurity.manageWorkflows){populateFields();var oldFormWorkflows=angular.copy(scope.form.formWorkflows),oldMessageOnSubmit=angular.copy(scope.form.messageOnSubmit),oldGoToPageOnSubmit=angular.copy(scope.form.goToPageOnSubmit);localizationService.localize("formEdit_workflows").then(function(val){editorService.open({view:"/App_Plugins/UmbracoForms/backoffice/Form/overlays/workflows/workflows-overview.html",title:val,formWorkflows:scope.form.formWorkflows,messageOnSubmit:scope.form.messageOnSubmit,messageOnSubmitIsHtml:scope.form.messageOnSubmitIsHtml,goToPageOnSubmit:scope.form.goToPageOnSubmit,submitLabel:scope.form.submitLabel,manualApproval:scope.form.manualApproval,fields:scope.fields,size:"medium",submit:function(model){scope.form.formWorkflows=model.formWorkflows;scope.form.messageOnSubmit=model.messageOnSubmit;scope.form.messageOnSubmitIsHtml=model.messageOnSubmitIsHtml;scope.form.goToPageOnSubmit=model.goToPageOnSubmit;editorService.close()},close:function(){scope.form.formWorkflows=oldFormWorkflows;scope.form.messageOnSubmit=oldMessageOnSubmit;scope.form.goToPageOnSubmit=oldGoToPageOnSubmit;editorService.close()}})})}};scope.editWorkflowSettings=function(workflow,collection,index){if(scope.security&&scope.security.userSecurity.manageWorkflows){populateFields();var preEditedWorkflow=JSON.parse(JSON.stringify(workflow));editorService.open({view:"/App_Plugins/UmbracoForms/backoffice/Form/overlays/workflows/workflow-settings.html",workflow:workflow,fields:scope.fields,title:workflow.name,size:"medium",submit:function(model){workflowResource.validateWorkflowSettings(model.workflow).then(function(response){response.data.length>0?localizationService.localize("formWorkflows_saveFailedTitle").then(function(errorTitle){angular.forEach(response.data,function(error){notificationsService.error(errorTitle,error.Message)})}):editorService.close()})},close:function(hasChanges){hasChanges?localizationService.localizeMany(["formWorkflows_closeConfirmationTitle","formWorkflows_closeConfirmationMessage","general_no","general_yes"]).then(function(labels){overlayService.open({view:"confirm",title:labels[0],content:labels[1],closeButtonLabel:labels[2],submitButtonLabel:labels[3],submitButtonStyle:"danger",close:function(){overlayService.close()},submit:function(){scope.form.formWorkflows[collection][index]=preEditedWorkflow;overlayService.close();editorService.close()}})}):editorService.close()}})}};scope.editSubmitMessageWorkflow=function(){localizationService.localize("formWorkflows_messageOnSubmit").then(function(val){editorService.open({view:"/App_Plugins/UmbracoForms/backoffice/Form/overlays/workflows/submit-message-workflow-settings.html",title:val,messageOnSubmit:scope.form.messageOnSubmit,messageOnSubmitIsHtml:scope.form.messageOnSubmitIsHtml,goToPageOnSubmit:scope.form.goToPageOnSubmit,size:"medium",submit:function(model){scope.form.messageOnSubmit=model.messageOnSubmit;scope.form.messageOnSubmitIsHtml=model.messageOnSubmitIsHtml;scope.form.goToPageOnSubmit=model.goToPageOnSubmit;editorService.close()},close:function(){editorService.close()}})})};scope.initForm(scope.form,scope.fieldtypes)}}});angular.module("umbraco.directives").directive("umbFormsEntryDetail",function(userService,currentUserResource,editorService,recordResource,overlayService,localizationService,notificationsService){return{restrict:"E",replace:!0,templateUrl:"/App_Plugins/UmbracoForms/Directives/umb-forms-entry-detail.html",scope:{entry:"=",sensitiveDataAccess:"=",allowEdit:"=",allowShowAuditTrail:"="},link:function(scope){function getMember(entry){for(var i=0;i<entry.fields.length;i++)if(entry.fields[i]&&entry.fields[i].fieldId==="member")return entry.fields[i].value;return null}function loadAuditTrail(){recordResource.getAuditTrail(scope.entry.id).then(function(response){scope.auditTrailEntries=response.data;scope.showingAuditTrail=!0})}function loadWorkflowAuditTrail(){recordResource.getWorkflowAuditTrail(scope.entry.uniqueId).then(function(response){scope.workflowAuditTrailEntries=response.data})}scope.showingAuditTrail=!1;scope.auditTrailEntries=[];scope.canLinkToContent=!1;scope.canLinkToMembers=!1;userService.getCurrentUser().then(function(user){var canAccessContentSection=user.allowedSections.indexOf("content")!==-1;canAccessContentSection&&currentUserResource.checkPermission("F",scope.entry.umbracoPage.id).then(function(data){scope.canLinkToContent=data});scope.canLinkToMembers=user.allowedSections.indexOf("member")!==-1});scope.$watch("entry",function(newValue,oldValue){scope.showingAuditTrail&&newValue.id===oldValue.id?loadAuditTrail():scope.showingAuditTrail=!1;newValue.id!==oldValue.id&&loadWorkflowAuditTrail()},!0);loadWorkflowAuditTrail();scope.openContent=function(id){editorService.contentEditor({id:id,close:function(){editorService.close()}})};scope.hasMember=function(entry){return getMember(entry)!==null};scope.getMemberDetails=function(entry){var member=getMember(entry);return member?member.Name+" ("+member.Email+")":""};scope.openMember=function(entry){var member=getMember(entry);member&&editorService.memberEditor({id:member.Key,close:function(){editorService.close()}})};scope.toggleAuditTrail=function(){scope.showingAuditTrail?scope.showingAuditTrail=!1:loadAuditTrail()};scope.runWorkflow=function(workflowKey){function performRetry(){scope.retryingWorkflow=!0;recordResource.retryWorkflow(scope.entry.id,scope.entry.form,workflowKey).then(function(response){localizationService.localizeMany(["formEntries_workflowAuditRetrySuccessMessage","formEntries_workflowAuditRetryFailedMessage"]).then(function(labels){response.data.success?notificationsService.success(labels[0]+"."):notificationsService.error(labels[1]+": "+response.data.message);loadWorkflowAuditTrail();scope.retryingWorkflow=!1})})}localizationService.localizeMany(["formEntries_workflowAuditRetryConfirmTitle","formEntries_workflowAuditRetryConfirmMessage","general_yes","general_no"]).then(function(labels){overlayService.open({view:"confirm",title:labels[0],content:labels[1],closeButtonLabel:labels[3],submitButtonLabel:labels[2],submitButtonStyle:"warning",close:function(){overlayService.close()},submit:function(){performRetry();overlayService.close()}})})}}}});angular.module("umbraco.directives").directive("umbFormsFileUploadEditor",function(notificationsService,overlayService,localizationService){return{restrict:"E",replace:!0,templateUrl:"/App_Plugins/UmbracoForms/Directives/umb-forms-file-upload-editor.html",require:"ngModel",link:function(scope,element,attr,ctrl){function updateModel(){ctrl.$setViewValue(scope.allowedFileTypes)}localizationService.localizeMany(["formFileUpload_allowAllFiles","formFileUpload_allowOnlySpecifiedFiles"]).then(function(labels){scope.allowedFileTypes=[{Type:"",Name:labels[0],Checked:!1},{Type:"pdf",Name:"PDF",Checked:!1},{Type:"docx",Name:"DOCX",Checked:!1},{Type:"xlsx",Name:"XLSX",Checked:!1},{Type:"txt",Name:"TXT",Checked:!1},{Type:"png",Name:"PNG",Checked:!1},{Type:"jpg",Name:"JPG",Checked:!1},{Type:"gif",Name:"GIF",Checked:!1}];scope.allowedFileTypesToggleTextOn=labels[0];scope.allowedFileTypesToggleTextOff=labels[1]});ctrl.$render=function(){Object.prototype.toString.call(ctrl.$viewValue)==="[object Array]"&&(ctrl.$viewValue.forEach(function(allowedFileType){allowedFileType.Checked===""||allowedFileType.Checked===undefined||allowedFileType.Checked===null?allowedFileType.Checked=undefined:typeof allowedFileType.Checked=="string"&&allowedFileType.Checked.toLowerCase()==="false"?allowedFileType.Checked=!1:typeof allowedFileType.Checked=="string"&&allowedFileType.Checked.toLowerCase()==="true"&&(allowedFileType.Checked=!0)}),scope.allowedFileTypes=ctrl.$viewValue);updateModel()};scope.deleteAllowedFileType=function(idx){var performDelete=function(){scope.allowedFileTypes.splice(idx,1);updateModel()};localizationService.localizeMany(["formFileUpload_deleteAllowedFileTypeConfirmationTitle","formFileUpload_deleteAllowedFileTypeConfirmationDescription","general_no","general_yes"]).then(function(labels){overlayService.open({view:"confirm",title:labels[0],content:labels[1],closeButtonLabel:labels[2],submitButtonLabel:labels[3],submitButtonStyle:"danger",close:function(){overlayService.close()},submit:function(){performDelete();overlayService.close()}})})};scope.addAllowedFileType=function(){if(scope.newAllowedFileType&&(scope.newAllowedFileType=scope.newAllowedFileType.replace(/[^a-zA-Z0-9]/g,""),scope.newAllowedFileType.length!==0)){var indexOfExisting=scope.allowedFileTypes.findIndex(function(p){return p.Name.toUpperCase()===scope.newAllowedFileType.toUpperCase()});indexOfExisting<0?(scope.allowedFileTypes.push({Type:scope.newAllowedFileType,Name:scope.newAllowedFileType.toUpperCase(),Checked:undefined}),scope.newAllowedFileType="",scope.allowedFileTypes.forEach(function(allowedFileType){allowedFileType.Type===""&&(allowedFileType.Checked=!1)}),updateModel()):localizationService.localizeMany(["formFileUpload_duplicateFileTypeErrorTitle","formFileUpload_duplicateFileTypeErrorMessage"]).then(function(labels){notificationsService.error(labels[0],labels[1])})}};scope.switchAllowedPredefined=function(allowedFileType,updateProvidedFileType){updateProvidedFileType&&(allowedFileType.Checked=!allowedFileType.Checked);allowedFileType!==undefined&&(allowedFileType.Type===""&&allowedFileType.Checked===!0&&scope.allowedFileTypes.forEach(function(allowedFileType){allowedFileType.Type!==""&&allowedFileType.Checked!==undefined&&(allowedFileType.Checked=!1)}),allowedFileType.Type!==""&&allowedFileType.Checked===!0&&allowedFileType.Checked!==undefined&&scope.allowedFileTypes.forEach(function(allowedFileType){allowedFileType.Type===""&&(allowedFileType.Checked=!1)}),updateModel())}}}});angular.module("umbraco.directives").directive("umbFormsInlinePrevalueEditor",function(notificationsService,localizationService){return{restrict:"E",replace:!0,templateUrl:"/App_Plugins/UmbracoForms/Directives/umb-forms-inline-prevalue-editor.html",require:"ngModel",link:function(scope,element,attr,ctrl){function updateModel(){ctrl.$setViewValue(scope.prevalues)}scope.prevalues=[];ctrl.$render=function(){Object.prototype.toString.call(ctrl.$viewValue)==="[object Array]"&&(scope.prevalues=ctrl.$viewValue)};scope.addPrevalue=function(){scope.prevalues.indexOf(scope.newPrevalue)<0?(scope.prevalues.push(scope.newPrevalue),scope.newPrevalue="",updateModel()):localizationService.localizeMany(["formPrevalues_duplicateErrorTitle","formPrevalues_duplicateAddErrorMessage"]).then(function(labels){notificationsService.error(labels[0],labels[1])})}}}});angular.module("umbraco.directives").directive("umbFormsPrevalueEditor",function(notificationsService,localizationService){return{restrict:"E",replace:!0,templateUrl:"/App_Plugins/UmbracoForms/Directives/umb-forms-prevalue-editor.html",require:"ngModel",link:function(scope,element,attr,ctrl){function updateModel(){ctrl.$setViewValue(scope.prevalues)}scope.prevalues=[];scope.editIndex=-1;scope.deleteIndex=-1;scope.addLabel="";scope.saveLabel="";localizationService.localizeMany(["general_add","buttons_save"]).then(function(labels){scope.addLabel=labels[0];scope.saveLabel=labels[1]});ctrl.$render=function(){Object.prototype.toString.call(ctrl.$viewValue)==="[object Array]"&&(scope.prevalues=ctrl.$viewValue)};scope.editPrevalue=function(idx){scope.editIndex=idx;scope.newPrevalue=scope.prevalues[idx]};scope.deletePrevalue=function(idx){scope.prevalues.splice(idx,1);updateModel()};scope.addPrevalue=function(){var otherPrevalues=scope.prevalues.slice();scope.isEditing()&&otherPrevalues.splice(scope.editIndex,1);otherPrevalues.indexOf(scope.newPrevalue)<0?(scope.isEditing()?scope.prevalues[scope.editIndex]=scope.newPrevalue:scope.prevalues.push(scope.newPrevalue),scope.newPrevalue={},scope.editIndex=-1,updateModel()):localizationService.localizeMany(["formPrevalues_duplicateErrorTitle","formPrevalues_duplicateEditErrorMessage","formPrevalues_duplicateAddErrorMessage"]).then(function(labels){notificationsService.error(labels[0],scope.isEditing()?labels[1]:labels[2])})};scope.cancelEditing=function(){scope.newPrevalue={};scope.editIndex=-1};scope.isEditing=function(){return scope.editIndex>=0};scope.showDeletePrompt=function(idx){scope.deleteIndex=idx};scope.isDeleting=function(idx){return scope.deleteIndex===idx};scope.hideDeletePrompt=function(){scope.deleteIndex=-1}}}});angular.module("umbraco.directives").directive("umbFormsRenderType",function(){return{restrict:"E",replace:!0,templateUrl:"/App_Plugins/UmbracoForms/Directives/umb-forms-render-type.html",scope:{detail:"=",field:"=",name:"=",view:"=",editView:"=",sensitive:"=",hasAccess:"=",allowEdit:"="},link:function(){}}});angular.module("umbraco.services").factory("formService",function(preValueSourceResource){function generateGuid(){var d=(new Date).getTime();return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=(d+Math.random()*16)%16|0;return d=Math.floor(d/16),(c==="x"?r:r&7|8).toString(16)})}function generateCopiedAlias(alias,existingFieldAliases){var result,matches=alias.match(/\d+$/),clashesWithExistingAlias,i;if(matches){var prefix=alias.substring(0,alias.length-matches[0].length),existingNumberSuffix=parseInt(matches[0],10),newNumberSuffix=existingNumberSuffix+1;result=prefix+newNumberSuffix}else result=alias+"2";for(clashesWithExistingAlias=!1,i=0;i<existingFieldAliases.length;i++)if(existingFieldAliases[i]===result){clashesWithExistingAlias=!0;break}return clashesWithExistingAlias?generateCopiedAlias(result,existingFieldAliases):result}var service={fieldTypes:[],actionTypes:[{name:"Show",value:"Show"},{name:"Hide",value:"Hide"}],workflowActionTypes:[{name:"Run",value:"Show"},{name:"Ignore",value:"Hide"}],logicTypes:[{name:"all",value:"All"},{name:"any",value:"Any"}],operators:[{name:"is",value:"Is"},{name:"is not",value:"IsNot"},{name:"is greater than",value:"GreaterThen"},{name:"is less than",value:"LessThen"},{name:"contains",value:"Contains"},{name:"starts with",value:"StartsWith"},{name:"ends with",value:"EndsWith"}],getActionTypes:function(){return service.actionTypes},getWorkflowActionTypes:function(){return service.workflowActionTypes},getLogicTypes:function(){return service.logicTypes},getOperators:function(){return service.operators},initForm:function(form,fieldtypes){service.fieldTypes=fieldtypes;form.pages&&form.pages.length!==0?_.each(service.getAllFields(form),function(field){field.$fieldType||service.setFieldType(field,field.fieldTypeId)}):service.addPage(form)},addPage:function(form,index){var p={caption:"",fieldSets:[],id:generateGuid()};service.addFieldset(p);form.pages.length>index?form.pages.splice(index,0,p):form.pages.push(p)},addFieldset:function(page,index){var fs={caption:"",containers:[],id:generateGuid()};service.addContainer(fs);page.fieldSets.length>index?page.fieldSets.splice(index,0,fs):page.fieldSets.push(fs)},copyFieldset:function(page,fieldset,existingFieldAliases){var index=page.fieldSets.indexOf(fieldset);index>=0&&service.copyFieldsetAtIndex(page,fieldset,index,existingFieldAliases)},copyFieldsetAtIndex:function(page,fieldset,index,existingFieldAliases){var copiedFieldset=JSON.parse(JSON.stringify(fieldset)),i,j,copiedField;for(copiedFieldset.id=generateGuid(),i=0;i<copiedFieldset.containers.length;i++)for(j=0;j<copiedFieldset.containers[i].fields.length;j++)copiedField=copiedFieldset.containers[i].fields[j],copiedField.id=generateGuid(),copiedField.alias=generateCopiedAlias(copiedField.alias,existingFieldAliases),existingFieldAliases.push(copiedField.alias);page.fieldSets.splice(index+1,0,copiedFieldset)},deleteFieldset:function(page,fieldset){if(page.fieldSets.length>1){var index=page.fieldSets.indexOf(fieldset);page.fieldSets.splice(index,1)}else fieldset.containers.length=0,service.addContainer(fieldset)},deleteFieldsetAtIndex:function(page,index){page.fieldSets.length>1?page.fieldSets.splice(index,1):(fieldset.containers.length=0,service.addContainer(fieldset))},splitFieldset:function(page,fieldset,container,splitAtIndex){var newfieldset={caption:"",containers:[{caption:"",fields:[]}]},insertAt=page.fieldSets.indexOf(fieldset),oldFields,newFields;page.fieldSets.splice(insertAt+1,0,newfieldset);oldFields=container.fields.slice(0,splitAtIndex+1);newFields=container.fields.slice(splitAtIndex+1);newfieldset.containers[0].fields=newFields;container.fields=oldFields},addContainer:function(fieldset,index){var c={caption:"",fields:[]};fieldset.containers.length>index?fieldset.containers.splice(index,0,c):fieldset.containers.push(c)},splitContainer:function(fieldset,container,splitAtIndex){var newContainer={caption:"",fields:[]},insertAt=fieldset.containers.indexOf(container),newFields,oldFields;fieldset.containers.splice(insertAt-1,0,newContainer);newFields=container.fields.slice(0,splitAtIndex+1);oldFields=container.fields.slice(splitAtIndex+1);newContainer.fields=newFields;container.fields=oldFields},deleteContainer:function(fieldset,container){if(fieldset.containers.length>1){var index=fieldset.containers.indexOf(container);index>=0&&service.deleteContainerAtIndex(fieldset,index)}else container.fields.length=0},deleteContainerAtIndex:function(fieldset,index){fieldset.containers.length>1?fieldset.containers.splice(index,1):fieldset.containers.length=0},syncContainerWidths:function(form){_.each(form.pages,function(page){_.each(page.fieldSets,function(fieldset){var containers=fieldset.containers.length,avrg=Math.floor(12/containers);_.each(fieldset.containers,function(container){container.width=avrg})})})},addField:function(container,fieldtype,index){var newField={caption:"",id:generateGuid(),settings:{},preValues:[],$focus:!0};service.loadFieldTypeSettings(newField,fieldtype);container.fields.length>index?container.fields.splice(index,0,newField):container.fields.push(newField)},addEmptyField:function(container){var newField={caption:"",alias:"",id:generateGuid(),settings:{},preValues:[],$focus:!0};return container.fields.push(newField),newField},getAllFields:function(form){var fields=[];return form.pages&&_.each(form.pages,function(page){page.fieldSets&&_.each(page.fieldSets,function(fieldset){fieldset.containers&&_.each(fieldset.containers,function(container){container.fields&&_.each(container.fields,function(field){fields.push(field)})})})}),fields},copyField:function(container,field,existingFieldAliases){var index=container.fields.indexOf(field);index>=0&&service.copyFieldAtIndex(container,field,index,existingFieldAliases)},copyFieldAtIndex:function(container,field,index,existingFieldAliases){var copiedField=JSON.parse(JSON.stringify(field));copiedField.id=generateGuid();copiedField.alias=generateCopiedAlias(field.alias,existingFieldAliases);container.fields.splice(index+1,0,copiedField)},deleteField:function(fieldset,container,field){var index=container.fields.indexOf(field);index>=0&&service.deleteFieldAtIndex(fieldset,container,index)},deleteFieldAtIndex:function(fieldset,container,index){container.fields.splice(index,1);container.fields.length===0&&service.deleteContainer(fieldset,container)},setFieldType:function(field,fieldTypeId){field.fieldTypeId=fieldTypeId;var fldt=_.find(service.fieldTypes,function(ft){return ft.id===field.fieldTypeId});field.$fieldType=fldt;service.loadFieldTypeSettings(field,field.$fieldType);service.loadFieldTypePrevalues(field)},loadFieldTypePrevalues:function(field){field.prevalueSourceId!==null&&field.prevalueSourceId!=="00000000-0000-0000-0000-000000000000"?preValueSourceResource.getPreValuesByGuid(field.prevalueSourceId).then(function(response){field.$preValues=response.data}):field.$preValues=null},loadFieldTypeSettings:function(field,fieldtype){if(!fieldtype){field.settings={};return}field.fieldTypeId!==fieldtype.id&&(field.settings={});field.fieldTypeId=fieldtype.id;field.$fieldType=fieldtype;fieldtype.settings&&_.each(fieldtype.settings,function(setting){field.settings[setting.alias]||(field.settings[setting.alias]="")})},deleteConditionRule:function(rules,rule){var index=rules.indexOf(rule);rules.splice(index,1)},addConditionRule:function(condition){condition.rules||(condition.rules=[]);condition.rules.push({field:condition.$newrule.field,operator:condition.$newrule.operator,value:condition.$newrule.value})},addEmptyConditionRule:function(condition){condition.rules||(condition.rules=[]);condition.rules.push({field:"",operator:"",value:""})},populateConditionRulePrevalues:function(selectedField,rule,fields){for(var field,i=0;i<fields.length;i++)field=fields[i],field.id===selectedField&&(rule.$preValues=field.$preValues&&field.$preValues.length>0?field.$preValues:field.preValues&&field.preValues.length>0?field.preValues:null)},getSelectedPrevalues:function(fieldPreValues,fieldValue){var i,fieldPreValueValue,result;if(!fieldValue||fieldValue.length===0)return[];var fieldPreValuesSortedInReverseLength=_.sortBy(fieldPreValues,function(pv){return-pv.value.length}),value=fieldValue+", ",delimiter="|||";for(i=0;i<fieldPreValuesSortedInReverseLength.length;i++)fieldPreValueValue=fieldPreValuesSortedInReverseLength[i].value,value=value.replace(fieldPreValueValue+", ",fieldPreValueValue.replace(",","|,")+delimiter);for(result=value.split(delimiter).filter(Boolean),i=0;i<result.length;i++)result[i]=result[i].replace("|,",",");return result}};return service});angular.module("umbraco.services").factory("formsValidationService",function(){function getErrorMessageFromExceptionResponse(err){var errorMessage=err.data.Message,modelStateValues;return err.data.ModelState&&(modelStateValues=Object.keys(err.data.ModelState).map(function(key){return err.data.ModelState[key][0]}),errorMessage=modelStateValues.join("<br/>")),errorMessage}return{getErrorMessageFromExceptionResponse:getErrorMessageFromExceptionResponse}});angular.module("umbraco.services").factory("providerLocalizationHelper",function(){function convertNameForKey(name){return name.replace(/(?:^\w|[A-Z]|\b\w)/g,function(word,index){return index===0?word.toLowerCase():word.toUpperCase()}).replace(/\W+/g,"")}function labelIsTranslated(label){return!(label[0]==="["&&label[label.length-1]==="]")}return{getLocalizationKeys:function(stem,types,name){for(var systemName,keyStem,j,keySettingStem,keys=[],i=0;i<types.length;i++)if(systemName=name||types[i].name,keyStem=stem+"_"+convertNameForKey(systemName),keys.push(keyStem+"Name"),keys.push(keyStem+"Description"),types[i].settings)for(j=0;j<types[i].settings.length;j++)keySettingStem=keyStem+types[i].settings[j].alias,keys.push(keySettingStem+"Label"),keys.push(keySettingStem+"Description");return keys},getLocalizationKeysForFormWorkflows:function(formWorkflows){var keys=[],stem="formProviderWorkflows",getKeysForWorkflows=function(workflows,keys){for(var keyStem,i=0;i<workflows.length;i++)keyStem=stem+"_"+convertNameForKey(workflows[i].workflowTypeName),keys.push(keyStem+"Name"),keys.push(keyStem+"Description")};return getKeysForWorkflows(formWorkflows.onSubmit,keys),getKeysForWorkflows(formWorkflows.onApprove,keys),keys},applyLocalizationLabels:function(types,labels,omitSettingName){for(var j,labelIndex=0,i=0;i<types.length;i++)if(!omitSettingName&&labelIsTranslated(labels[labelIndex])&&(types[i].name=labels[labelIndex]),labelIndex++,labelIsTranslated(labels[labelIndex])&&(types[i].description=labels[labelIndex]),labelIndex++,types[i].settings)for(j=0;j<types[i].settings.length;j++)labelIsTranslated(labels[labelIndex])&&(types[i].settings[j].name=labels[labelIndex],types[i].settings[j].description=labels[labelIndex+1]),labelIndex=labelIndex+2},applyLocalizationLabelsToFormWorkflows:function(formWorkflows,labels){var applyToWorkflows=function(workflows,labels,labelIndex){for(var i=0;i<workflows.length;i++)labelIsTranslated(labels[labelIndex])&&(workflows[i].workflowTypeName=labels[labelIndex]),labelIndex++,labelIsTranslated(labels[labelIndex])&&(workflows[i].workflowTypeDescription=labels[labelIndex]),labelIndex++;return labelIndex},nextLabelIndex=applyToWorkflows(formWorkflows.onSubmit,labels,0);applyToWorkflows(formWorkflows.onApprove,labels,nextLabelIndex)}}});angular.module("umbraco.services").factory("utilityService",function(){return{compareVersions:function(v1,v2,options){function isValidPart(x){return(lexicographical?/^\d+[A-Za-z]*$/:/^\d+$/).test(x)}var lexicographical=options&&options.lexicographical,zeroExtend=options&&options.zeroExtend,v1parts=v1.split("."),v2parts=v2.split("."),i;if(!v1parts.every(isValidPart)||!v2parts.every(isValidPart))return NaN;if(zeroExtend){while(v1parts.length<v2parts.length)v1parts.push("0");while(v2parts.length<v1parts.length)v2parts.push("0")}for(lexicographical||(v1parts=v1parts.map(Number),v2parts=v2parts.map(Number)),i=0;i<v1parts.length;++i){if(v2parts.length===i)return 1;if(v1parts[i]===v2parts[i])continue;else return v1parts[i]>v2parts[i]?1:-1}return v1parts.length!==v2parts.length?-1:0},serverTimeNeedsOffsetting:function(){var needsOffsetting=!1,serverOffset=0,localOffset;return Umbraco.Sys.ServerVariables.application.serverTimeOffset!==undefined&&(serverOffset=Umbraco.Sys.ServerVariables.application.serverTimeOffset,localOffset=(new Date).getTimezoneOffset(),needsOffsetting=-serverOffset!==localOffset),needsOffsetting},hexHtmlToString:function(s){return s.replace(/&#x([a-fA-F0-9]+);/g,function(match,grp){var num=parseInt(grp,16);return String.fromCharCode(num)}).replace("&amp;","&")}}});angular.module("umbraco.filters").config(function($injector,$provide){$injector.has("truncateFilter")||$provide.provider("truncateFilter",function(){return{$get:function(){return function(value,wordwise,max,tail){if(!value)return"";if((typeof wordwise!="boolean"&&(max!==!0&&(tail=""),max=wordwise,wordwise=!1),max=parseInt(max,10),!max)||value.length<=max)return value;if(tail=!tail&&tail!==""?"…":tail,wordwise&&value.substr(max,1)===" "&&max++,value=value.substr(0,max),wordwise){var lastspace=value.lastIndexOf(" ");lastspace!==-1&&(value=value.substr(0,lastspace+1))}return value+tail}}}})});angular.module("umbraco.filters").filter("fileName",function(){return function(input){return input.split("\\").pop().split("/").pop()}});angular.module("umbraco.filters").filter("umbFormsFormName",function(formResource){function formNameFilter(input){if(input&&input.length>0){if(input in cached)return typeof cached[input]=="string"?cached[input]:undefined;cached[input]=formResource.getByGuid(input).then(function(response){cached[input]=response.data.name})}}var cached={};return formNameFilter.$stateful=!0,formNameFilter});angular.module("umbraco.filters").filter("momentDateTimeZone",function(){return function(input,momentFormat){var parseDate=moment.utc(input);return parseDate.format(momentFormat)}});angular.module("umbraco.filters").filter("relativeDate",function($filter){return function(input){var now=moment(),parseDate=moment(input.replace("Z",""));return parseDate.isValid()===!1?$filter("date")(input,"medium"):parseDate.from(now)}})